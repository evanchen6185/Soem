; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\stm32f4xx_exti.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\FWLIB\STM32F4xx_StdPeriph_Driver\inc -I..\USER -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\ETHERNET -I..\HARDWARE\TIMER -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\RTC -I..\HARDWARE\ADC -I..\HARDWARE\SRAM -I..\HARDWARE\InterTemperate -I..\FWLIB\STM32F4x7_ETH_Driver\inc -I..\MALLOC -I..\USMART -I..\HARDWARE -I..\ETHERCAT -I.\RTE\_LWIP -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS --omf_browse=..\obj\stm32f4xx_exti.crf ..\FWLIB\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;108      */
;;;109    void EXTI_DeInit(void)
000000  4935              LDR      r1,|L1.216|
;;;110    {
;;;111      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;112      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;113      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;114      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;115      EXTI->PR = 0x007FFFFF;
000012  4931              LDR      r1,|L1.216|
000014  4831              LDR      r0,|L1.220|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;116    }
00001a  4770              BX       lr
;;;117    
                          ENDP

                  EXTI_Init PROC
;;;124      */
;;;125    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
00001c  b530              PUSH     {r4,r5,lr}
;;;126    {
;;;127      uint32_t tmp = 0;
;;;128    
;;;129      /* Check the parameters */
;;;130      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;131      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;132      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;133      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;134    
;;;135      tmp = (uint32_t)EXTI_BASE;
00001e  4a2e              LDR      r2,|L1.216|
;;;136         
;;;137      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000020  7983              LDRB     r3,[r0,#6]
000022  6801              LDR      r1,[r0,#0]            ;126
000024  b353              CBZ      r3,|L1.124|
;;;138      {
;;;139        /* Clear EXTI line configuration */
;;;140        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000026  6813              LDR      r3,[r2,#0]
000028  438b              BICS     r3,r3,r1
00002a  6013              STR      r3,[r2,#0]
;;;141        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
00002c  1d11              ADDS     r1,r2,#4
00002e  680b              LDR      r3,[r1,#0]
000030  6804              LDR      r4,[r0,#0]
000032  43a3              BICS     r3,r3,r4
000034  600b              STR      r3,[r1,#0]
;;;142        
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
000036  7901              LDRB     r1,[r0,#4]
000038  4411              ADD      r1,r1,r2
;;;144    
;;;145        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00003a  680b              LDR      r3,[r1,#0]
00003c  6804              LDR      r4,[r0,#0]
00003e  4323              ORRS     r3,r3,r4
000040  600b              STR      r3,[r1,#0]
;;;146    
;;;147        /* Clear Rising Falling edge configuration */
;;;148        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000042  4b25              LDR      r3,|L1.216|
000044  3308              ADDS     r3,r3,#8
000046  6819              LDR      r1,[r3,#0]
000048  6804              LDR      r4,[r0,#0]
00004a  43a1              BICS     r1,r1,r4
00004c  6019              STR      r1,[r3,#0]
;;;149        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00004e  1d1c              ADDS     r4,r3,#4
000050  6821              LDR      r1,[r4,#0]
000052  6805              LDR      r5,[r0,#0]
000054  43a9              BICS     r1,r1,r5
000056  6021              STR      r1,[r4,#0]
;;;150        
;;;151        /* Select the trigger for the selected external interrupts */
;;;152        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000058  7941              LDRB     r1,[r0,#5]
00005a  2910              CMP      r1,#0x10
00005c  d005              BEQ      |L1.106|
;;;153        {
;;;154          /* Rising Falling edge */
;;;155          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;156          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;157        }
;;;158        else
;;;159        {
;;;160          tmp = (uint32_t)EXTI_BASE;
;;;161          tmp += EXTI_InitStruct->EXTI_Trigger;
00005e  4411              ADD      r1,r1,r2
;;;162    
;;;163          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000060  680a              LDR      r2,[r1,#0]
000062  6800              LDR      r0,[r0,#0]
000064  4302              ORRS     r2,r2,r0
000066  600a              STR      r2,[r1,#0]
;;;164        }
;;;165      }
;;;166      else
;;;167      {
;;;168        tmp += EXTI_InitStruct->EXTI_Mode;
;;;169    
;;;170        /* Disable the selected external lines */
;;;171        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;172      }
;;;173    }
000068  bd30              POP      {r4,r5,pc}
                  |L1.106|
00006a  6819              LDR      r1,[r3,#0]            ;155
00006c  6802              LDR      r2,[r0,#0]            ;155
00006e  4311              ORRS     r1,r1,r2              ;155
000070  6019              STR      r1,[r3,#0]            ;155
000072  6821              LDR      r1,[r4,#0]            ;156
000074  6800              LDR      r0,[r0,#0]            ;156
000076  4301              ORRS     r1,r1,r0              ;156
000078  6021              STR      r1,[r4,#0]            ;156
00007a  bd30              POP      {r4,r5,pc}
                  |L1.124|
00007c  7900              LDRB     r0,[r0,#4]            ;168
00007e  4410              ADD      r0,r0,r2              ;168
000080  6802              LDR      r2,[r0,#0]            ;171
000082  438a              BICS     r2,r2,r1              ;171
000084  6002              STR      r2,[r0,#0]            ;171
000086  bd30              POP      {r4,r5,pc}
;;;174    
                          ENDP

                  EXTI_StructInit PROC
;;;180      */
;;;181    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000088  2100              MOVS     r1,#0
;;;182    {
;;;183      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;184      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
00008a  6001              STR      r1,[r0,#0]
00008c  7101              STRB     r1,[r0,#4]
;;;185      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
00008e  220c              MOVS     r2,#0xc
000090  7142              STRB     r2,[r0,#5]
;;;186      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
000092  7181              STRB     r1,[r0,#6]
;;;187    }
000094  4770              BX       lr
;;;188    
                          ENDP

                  EXTI_GenerateSWInterrupt PROC
;;;195      */
;;;196    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000096  4910              LDR      r1,|L1.216|
;;;197    {
;;;198      /* Check the parameters */
;;;199      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;200      
;;;201      EXTI->SWIER |= EXTI_Line;
000098  3110              ADDS     r1,r1,#0x10
00009a  680a              LDR      r2,[r1,#0]
00009c  4302              ORRS     r2,r2,r0
00009e  600a              STR      r2,[r1,#0]
;;;202    }
0000a0  4770              BX       lr
;;;203    
                          ENDP

                  EXTI_GetFlagStatus PROC
;;;225      */
;;;226    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
0000a2  4601              MOV      r1,r0
;;;227    {
;;;228      FlagStatus bitstatus = RESET;
;;;229      /* Check the parameters */
;;;230      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;231      
;;;232      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
0000a4  4a0c              LDR      r2,|L1.216|
0000a6  2000              MOVS     r0,#0                 ;228
0000a8  3214              ADDS     r2,r2,#0x14
0000aa  6812              LDR      r2,[r2,#0]
0000ac  420a              TST      r2,r1
0000ae  d000              BEQ      |L1.178|
;;;233      {
;;;234        bitstatus = SET;
0000b0  2001              MOVS     r0,#1
                  |L1.178|
;;;235      }
;;;236      else
;;;237      {
;;;238        bitstatus = RESET;
;;;239      }
;;;240      return bitstatus;
;;;241    }
0000b2  4770              BX       lr
;;;242    
                          ENDP

                  EXTI_ClearFlag PROC
;;;248      */
;;;249    void EXTI_ClearFlag(uint32_t EXTI_Line)
0000b4  4908              LDR      r1,|L1.216|
;;;250    {
;;;251      /* Check the parameters */
;;;252      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;253      
;;;254      EXTI->PR = EXTI_Line;
0000b6  3114              ADDS     r1,r1,#0x14
0000b8  6008              STR      r0,[r1,#0]
;;;255    }
0000ba  4770              BX       lr
;;;256    
                          ENDP

                  EXTI_GetITStatus PROC
;;;262      */
;;;263    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
0000bc  4601              MOV      r1,r0
;;;264    {
;;;265      FlagStatus bitstatus = RESET;
;;;266      /* Check the parameters */
;;;267      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;268      
;;;269      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
0000be  4a06              LDR      r2,|L1.216|
0000c0  2000              MOVS     r0,#0                 ;265
0000c2  3214              ADDS     r2,r2,#0x14
0000c4  6812              LDR      r2,[r2,#0]
0000c6  420a              TST      r2,r1
0000c8  d000              BEQ      |L1.204|
;;;270      {
;;;271        bitstatus = SET;
0000ca  2001              MOVS     r0,#1
                  |L1.204|
;;;272      }
;;;273      else
;;;274      {
;;;275        bitstatus = RESET;
;;;276      }
;;;277      return bitstatus;
;;;278      
;;;279    }
0000cc  4770              BX       lr
;;;280    
                          ENDP

                  EXTI_ClearITPendingBit PROC
;;;286      */
;;;287    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
0000ce  4902              LDR      r1,|L1.216|
;;;288    {
;;;289      /* Check the parameters */
;;;290      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;291      
;;;292      EXTI->PR = EXTI_Line;
0000d0  3114              ADDS     r1,r1,#0x14
0000d2  6008              STR      r0,[r1,#0]
;;;293    }
0000d4  4770              BX       lr
;;;294    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L1.216|
                          DCD      0x40013c00
                  |L1.220|
                          DCD      0x007fffff

;*** Start embedded assembler ***

#line 1 "..\\FWLIB\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 129 "..\\CORE\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 144
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
