; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\key.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\key.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\FWLIB\STM32F4xx_StdPeriph_Driver\inc -I..\USER -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\ETHERNET -I..\HARDWARE\TIMER -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\RTC -I..\HARDWARE\ADC -I..\HARDWARE\SRAM -I..\HARDWARE\InterTemperate -I..\FWLIB\STM32F4x7_ETH_Driver\inc -I..\MALLOC -I..\USMART -I..\HARDWARE -I..\ETHERCAT -IE:\EtherCAT\EthercatMaster\EthercatMaster_V3.0-新电路板\USER\RTE -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F40_41xxx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS --omf_browse=..\obj\key.crf ..\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;16     //按键初始化函数
;;;17     void KEY_Init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;18     {
;;;19     	GPIO_InitTypeDef GPIO_InitStructure;
;;;20     	
;;;21     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA|RCC_AHB1Periph_GPIOE,ENABLE);  //使能GPIOA GPIOE时钟
000002  2101              MOVS     r1,#1
000004  2011              MOVS     r0,#0x11
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;22     	
;;;23     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4;  //PE2,3,4引脚
00000a  201c              MOVS     r0,#0x1c
;;;24     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN;  //输入
00000c  9000              STR      r0,[sp,#0]
00000e  2000              MOVS     r0,#0
000010  f88d0004          STRB     r0,[sp,#4]
;;;25     	GPIO_InitStructure.GPIO_PuPd=GPIO_PuPd_UP;  //上拉输入
000014  2401              MOVS     r4,#1
000016  f88d4007          STRB     r4,[sp,#7]
;;;26     	GPIO_Init(GPIOE,&GPIO_InitStructure); 			//初始化GPIOE
00001a  4669              MOV      r1,sp
00001c  4828              LDR      r0,|L1.192|
00001e  f7fffffe          BL       GPIO_Init
;;;27     	
;;;28     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_0;  //PA0引脚
;;;29     	GPIO_InitStructure.GPIO_PuPd=GPIO_PuPd_DOWN;  //下拉输入
000022  2002              MOVS     r0,#2
000024  f88d0007          STRB     r0,[sp,#7]
000028  9400              STR      r4,[sp,#0]
;;;30     	GPIO_Init(GPIOA,&GPIO_InitStructure);     //初始化GPIOA
00002a  4669              MOV      r1,sp
00002c  4825              LDR      r0,|L1.196|
00002e  f7fffffe          BL       GPIO_Init
;;;31     }
000032  bd1c              POP      {r2-r4,pc}
;;;32     
                          ENDP

                  KEY_Scan PROC
;;;41     //注意此函数有响应优先级,KEY0>KEY1>KEY2>WK_UP!!
;;;42     u8 KEY_Scan(u8 mode)
000034  b570              PUSH     {r4-r6,lr}
;;;43     {
;;;44     	static u8 key_up=1;   //按键松开标志
;;;45     	if(mode) key_up=1;  //支持连按
000036  4c24              LDR      r4,|L1.200|
;;;46     	if(key_up&&(KEY0==0||KEY1==0||KEY2==0||WK_UP==1)) //有按键按下
000038  4e24              LDR      r6,|L1.204|
00003a  4d25              LDR      r5,|L1.208|
00003c  2101              MOVS     r1,#1                 ;45
00003e  b108              CBZ      r0,|L1.68|
000040  7021              STRB     r1,[r4,#0]            ;45
000042  e001              B        |L1.72|
                  |L1.68|
000044  7820              LDRB     r0,[r4,#0]  ; key_up
000046  b160              CBZ      r0,|L1.98|
                  |L1.72|
000048  f8d50210          LDR      r0,[r5,#0x210]
00004c  b170              CBZ      r0,|L1.108|
00004e  f8d5020c          LDR      r0,[r5,#0x20c]
000052  b158              CBZ      r0,|L1.108|
000054  f8d50208          LDR      r0,[r5,#0x208]
000058  b140              CBZ      r0,|L1.108|
00005a  f8d60200          LDR      r0,[r6,#0x200]
00005e  2801              CMP      r0,#1
000060  d004              BEQ      |L1.108|
                  |L1.98|
;;;47     	{
;;;48     		Delay_ms(10);  //按键去抖
;;;49     		key_up=0;
;;;50     		if(KEY0==0) return 1;
;;;51     		else if(KEY1==0) return 2;
;;;52     		else if(KEY2==0) return 3;
;;;53     		else if(WK_UP==1) return 4;
;;;54     	}else if(KEY0==1&&KEY1==1&&KEY2==1&&WK_UP==0)key_up=1; 
000062  f8d50210          LDR      r0,[r5,#0x210]
000066  2801              CMP      r0,#1
000068  d01b              BEQ      |L1.162|
00006a  e026              B        |L1.186|
                  |L1.108|
00006c  200a              MOVS     r0,#0xa               ;48
00006e  f7fffffe          BL       Delay_ms
000072  2000              MOVS     r0,#0                 ;49
000074  7020              STRB     r0,[r4,#0]            ;49
000076  f8d50210          LDR      r0,[r5,#0x210]        ;50
00007a  b150              CBZ      r0,|L1.146|
00007c  f8d5020c          LDR      r0,[r5,#0x20c]        ;51
000080  b148              CBZ      r0,|L1.150|
000082  f8d50208          LDR      r0,[r5,#0x208]        ;52
000086  b140              CBZ      r0,|L1.154|
000088  f8d60200          LDR      r0,[r6,#0x200]        ;53
00008c  2801              CMP      r0,#1                 ;53
00008e  d006              BEQ      |L1.158|
000090  e013              B        |L1.186|
                  |L1.146|
000092  2001              MOVS     r0,#1                 ;50
;;;55     	return 0; //无按键按下
;;;56     }
000094  bd70              POP      {r4-r6,pc}
                  |L1.150|
000096  2002              MOVS     r0,#2                 ;51
000098  bd70              POP      {r4-r6,pc}
                  |L1.154|
00009a  2003              MOVS     r0,#3                 ;52
00009c  bd70              POP      {r4-r6,pc}
                  |L1.158|
00009e  2004              MOVS     r0,#4                 ;53
0000a0  bd70              POP      {r4-r6,pc}
                  |L1.162|
0000a2  f8d5020c          LDR      r0,[r5,#0x20c]        ;54
0000a6  2801              CMP      r0,#1                 ;54
0000a8  d107              BNE      |L1.186|
0000aa  f8d50208          LDR      r0,[r5,#0x208]        ;54
0000ae  2801              CMP      r0,#1                 ;54
0000b0  d103              BNE      |L1.186|
0000b2  f8d60200          LDR      r0,[r6,#0x200]        ;54
0000b6  b900              CBNZ     r0,|L1.186|
0000b8  7021              STRB     r1,[r4,#0]            ;54
                  |L1.186|
0000ba  2000              MOVS     r0,#0                 ;55
0000bc  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

0000be  0000              DCW      0x0000
                  |L1.192|
                          DCD      0x40021000
                  |L1.196|
                          DCD      0x40020000
                  |L1.200|
                          DCD      ||.data||
                  |L1.204|
                          DCD      0x42400000
                  |L1.208|
                          DCD      0x42420000

                          AREA ||.data||, DATA, ALIGN=0

                  key_up
000000  01                DCB      0x01

;*** Start embedded assembler ***

#line 1 "..\\HARDWARE\\KEY\\key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REV16|
#line 129 "..\\CORE\\core_cmInstr.h"
|__asm___5_key_c_KEY_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_key_c_KEY_Init____REVSH|
#line 144
|__asm___5_key_c_KEY_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
