; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\misc.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\misc.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\FWLIB\STM32F4xx_StdPeriph_Driver\inc -I..\USER -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\ETHERNET -I..\HARDWARE\TIMER -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\RTC -I..\HARDWARE\ADC -I..\HARDWARE\SRAM -I..\HARDWARE\InterTemperate -I..\FWLIB\STM32F4x7_ETH_Driver\inc -I..\MALLOC -I..\USMART -I..\HARDWARE -I..\ETHERCAT -I.\RTE\_LWIP -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS --omf_browse=..\obj\misc.crf ..\FWLIB\STM32F4xx_StdPeriph_Driver\src\misc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NVIC_PriorityGroupConfig PROC
;;;117      */
;;;118    void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
000000  4928              LDR      r1,|L1.164|
;;;119    {
;;;120      /* Check the parameters */
;;;121      assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
;;;122      
;;;123      /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
;;;124      SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
000002  4308              ORRS     r0,r0,r1
000004  4928              LDR      r1,|L1.168|
000006  6008              STR      r0,[r1,#0]
;;;125    }
000008  4770              BX       lr
;;;126    
                          ENDP

                  NVIC_Init PROC
;;;135      */
;;;136    void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
00000a  b530              PUSH     {r4,r5,lr}
;;;137    {
;;;138      uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
00000c  230f              MOVS     r3,#0xf
;;;139      
;;;140      /* Check the parameters */
;;;141      assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
;;;142      assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
;;;143      assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
;;;144        
;;;145      if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
00000e  78c2              LDRB     r2,[r0,#3]
;;;146      {
;;;147        /* Compute the Corresponding IRQ Priority --------------------------------*/    
;;;148        tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
;;;149        tmppre = (0x4 - tmppriority);
;;;150        tmpsub = tmpsub >> tmppriority;
;;;151    
;;;152        tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
;;;153        tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
;;;154            
;;;155        tmppriority = tmppriority << 0x04;
;;;156            
;;;157        NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
000010  7801              LDRB     r1,[r0,#0]
;;;158        
;;;159        /* Enable the Selected IRQ Channels --------------------------------------*/
;;;160        NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
000012  2501              MOVS     r5,#1
000014  b1fa              CBZ      r2,|L1.86|
000016  4a24              LDR      r2,|L1.168|
000018  6812              LDR      r2,[r2,#0]            ;148
00001a  f10121e0          ADD      r1,r1,#0xe000e000     ;155
00001e  f40262e0          AND      r2,r2,#0x700          ;148
000022  f5c262e0          RSB      r2,r2,#0x700          ;148
000026  f3c22207          UBFX     r2,r2,#8,#8           ;148
00002a  f1c20404          RSB      r4,r2,#4              ;149
00002e  40d3              LSRS     r3,r3,r2              ;150
000030  7842              LDRB     r2,[r0,#1]            ;152
000032  40a2              LSLS     r2,r2,r4              ;152
000034  7884              LDRB     r4,[r0,#2]            ;153
000036  401c              ANDS     r4,r4,r3              ;153
000038  4314              ORRS     r4,r4,r2              ;153
00003a  0122              LSLS     r2,r4,#4              ;155
00003c  f8812400          STRB     r2,[r1,#0x400]        ;157
000040  7800              LDRB     r0,[r0,#0]
000042  f000011f          AND      r1,r0,#0x1f
000046  408d              LSLS     r5,r5,r1
000048  0940              LSRS     r0,r0,#5
00004a  0080              LSLS     r0,r0,#2
00004c  f10020e0          ADD      r0,r0,#0xe000e000
000050  f8c05100          STR      r5,[r0,#0x100]
;;;161          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;162      }
;;;163      else
;;;164      {
;;;165        /* Disable the Selected IRQ Channels -------------------------------------*/
;;;166        NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
;;;167          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;168      }
;;;169    }
000054  bd30              POP      {r4,r5,pc}
                  |L1.86|
000056  f001001f          AND      r0,r1,#0x1f           ;166
00005a  4085              LSLS     r5,r5,r0              ;166
00005c  0948              LSRS     r0,r1,#5              ;166
00005e  0080              LSLS     r0,r0,#2              ;166
000060  f10020e0          ADD      r0,r0,#0xe000e000     ;166
000064  f8c05180          STR      r5,[r0,#0x180]        ;166
000068  bd30              POP      {r4,r5,pc}
;;;170    
                          ENDP

                  NVIC_SetVectorTable PROC
;;;179      */
;;;180    void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
00006a  4a10              LDR      r2,|L1.172|
;;;181    { 
;;;182      /* Check the parameters */
;;;183      assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
;;;184      assert_param(IS_NVIC_OFFSET(Offset));  
;;;185       
;;;186      SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
00006c  4011              ANDS     r1,r1,r2
00006e  4301              ORRS     r1,r1,r0
000070  480d              LDR      r0,|L1.168|
000072  1f00              SUBS     r0,r0,#4
000074  6001              STR      r1,[r0,#0]
;;;187    }
000076  4770              BX       lr
;;;188    
                          ENDP

                  NVIC_SystemLPConfig PROC
;;;198      */
;;;199    void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
000078  4a0b              LDR      r2,|L1.168|
;;;200    {
;;;201      /* Check the parameters */
;;;202      assert_param(IS_NVIC_LP(LowPowerMode));
;;;203      assert_param(IS_FUNCTIONAL_STATE(NewState));  
;;;204      
;;;205      if (NewState != DISABLE)
;;;206      {
;;;207        SCB->SCR |= LowPowerMode;
00007a  1d12              ADDS     r2,r2,#4
00007c  2900              CMP      r1,#0                 ;205
;;;208      }
;;;209      else
;;;210      {
;;;211        SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
00007e  6811              LDR      r1,[r2,#0]
000080  d001              BEQ      |L1.134|
000082  4301              ORRS     r1,r1,r0              ;207
000084  e000              B        |L1.136|
                  |L1.134|
000086  4381              BICS     r1,r1,r0
                  |L1.136|
000088  6011              STR      r1,[r2,#0]            ;207
;;;212      }
;;;213    }
00008a  4770              BX       lr
;;;214    
                          ENDP

                  SysTick_CLKSourceConfig PROC
;;;222      */
;;;223    void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
00008c  f04f21e0          MOV      r1,#0xe000e000
;;;224    {
;;;225      /* Check the parameters */
;;;226      assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
;;;227      if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
000090  2804              CMP      r0,#4
;;;228      {
;;;229        SysTick->CTRL |= SysTick_CLKSource_HCLK;
;;;230      }
;;;231      else
;;;232      {
;;;233        SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
000092  6908              LDR      r0,[r1,#0x10]
000094  d003              BEQ      |L1.158|
000096  f0200004          BIC      r0,r0,#4
                  |L1.154|
00009a  6108              STR      r0,[r1,#0x10]         ;229
;;;234      }
;;;235    }
00009c  4770              BX       lr
                  |L1.158|
00009e  f0400004          ORR      r0,r0,#4              ;229
0000a2  e7fa              B        |L1.154|
;;;236    
                          ENDP

                  |L1.164|
                          DCD      0x05fa0000
                  |L1.168|
                          DCD      0xe000ed0c
                  |L1.172|
                          DCD      0x1fffff80

;*** Start embedded assembler ***

#line 1 "..\\FWLIB\\STM32F4xx_StdPeriph_Driver\\src\\misc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_misc_c_d0fc1254____REV16|
#line 129 "..\\CORE\\core_cmInstr.h"
|__asm___6_misc_c_d0fc1254____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_misc_c_d0fc1254____REVSH|
#line 144
|__asm___6_misc_c_d0fc1254____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
