; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\sram.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\sram.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\FWLIB\STM32F4xx_StdPeriph_Driver\inc -I..\USER -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\ETHERNET -I..\HARDWARE\TIMER -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\RTC -I..\HARDWARE\ADC -I..\HARDWARE\SRAM -I..\HARDWARE\InterTemperate -I..\FWLIB\STM32F4x7_ETH_Driver\inc -I..\MALLOC -I..\USMART -I..\HARDWARE -I..\ETHERCAT -I.\RTE\_LWIP -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=524 -DSTM32F407xx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS --omf_browse=..\obj\sram.crf ..\HARDWARE\SRAM\sram.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FSMC_SRAM_Init PROC
;;;22     //初始化外部SRAM
;;;23     void FSMC_SRAM_Init(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;24     {	
000004  b098              SUB      sp,sp,#0x60
;;;25     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;26     	FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
;;;27       FSMC_NORSRAMTimingInitTypeDef  readWriteTiming; 
;;;28     	
;;;29     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB|RCC_AHB1Periph_GPIOD|RCC_AHB1Periph_GPIOE|RCC_AHB1Periph_GPIOF|RCC_AHB1Periph_GPIOG, ENABLE);//使能PD,PE,PF,PG时钟  
000006  2101              MOVS     r1,#1
000008  207a              MOVS     r0,#0x7a
00000a  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;30       RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC,ENABLE);//使能FSMC时钟  
00000e  2101              MOVS     r1,#1
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       RCC_AHB3PeriphClockCmd
;;;31        
;;;32     
;;;33     	GPIO_InitStructure.GPIO_Pin = (3<<0)|(3<<4)|(0XFF<<8);//PD0,1,4,5,8~15 AF OUT
;;;34       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;//复用输出
000016  2502              MOVS     r5,#2
000018  f88d505c          STRB     r5,[sp,#0x5c]
;;;35       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
00001c  2400              MOVS     r4,#0
00001e  f64f7033          MOV      r0,#0xff33            ;33
000022  f88d405e          STRB     r4,[sp,#0x5e]
;;;36       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz
000026  2603              MOVS     r6,#3
;;;37       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉
;;;38       GPIO_Init(GPIOD, &GPIO_InitStructure);//初始化  
000028  f8dfa284          LDR      r10,|L1.688|
00002c  9016              STR      r0,[sp,#0x58]         ;34
00002e  f88d605d          STRB     r6,[sp,#0x5d]         ;36
000032  2701              MOVS     r7,#1                 ;37
000034  f88d705f          STRB     r7,[sp,#0x5f]         ;37
000038  a916              ADD      r1,sp,#0x58
00003a  4650              MOV      r0,r10
00003c  f7fffffe          BL       GPIO_Init
;;;39     	
;;;40       GPIO_InitStructure.GPIO_Pin = (3<<0)|(0X1FF<<7);//PE0,1,7~15,AF OUT
;;;41       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;//复用输出
000040  f88d505c          STRB     r5,[sp,#0x5c]
000044  f64f7083          MOV      r0,#0xff83            ;40
;;;42       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
000048  f88d405e          STRB     r4,[sp,#0x5e]
;;;43       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz
;;;44       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉
;;;45       GPIO_Init(GPIOE, &GPIO_InitStructure);//初始化  
00004c  f8df9264          LDR      r9,|L1.692|
000050  9016              STR      r0,[sp,#0x58]         ;41
000052  f88d605d          STRB     r6,[sp,#0x5d]         ;43
000056  f88d705f          STRB     r7,[sp,#0x5f]         ;44
00005a  a916              ADD      r1,sp,#0x58
00005c  4648              MOV      r0,r9
00005e  f7fffffe          BL       GPIO_Init
;;;46     	
;;;47      	GPIO_InitStructure.GPIO_Pin = (0X3F<<0)|(0XF<<12); 	//PF0~5,12~15
;;;48       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;//复用输出
000062  f88d505c          STRB     r5,[sp,#0x5c]
000066  f24f003f          MOV      r0,#0xf03f            ;47
;;;49       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
00006a  f88d405e          STRB     r4,[sp,#0x5e]
;;;50       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz
;;;51       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉
;;;52       GPIO_Init(GPIOF, &GPIO_InitStructure);//初始化  
00006e  f8df8248          LDR      r8,|L1.696|
000072  9016              STR      r0,[sp,#0x58]         ;48
000074  f88d605d          STRB     r6,[sp,#0x5d]         ;50
000078  f88d705f          STRB     r7,[sp,#0x5f]         ;51
00007c  a916              ADD      r1,sp,#0x58
00007e  4640              MOV      r0,r8
000080  f7fffffe          BL       GPIO_Init
;;;53     
;;;54     	GPIO_InitStructure.GPIO_Pin =(0X3F<<0)| GPIO_Pin_9;//PG0~5,9
;;;55       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;//复用输出
000084  f88d505c          STRB     r5,[sp,#0x5c]
;;;56       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;//推挽输出
000088  f88d405e          STRB     r4,[sp,#0x5e]
;;;57       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;//100MHz
00008c  f88d605d          STRB     r6,[sp,#0x5d]
000090  f240203f          MOV      r0,#0x23f             ;54
;;;58       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;//上拉
;;;59       GPIO_Init(GPIOG, &GPIO_InitStructure);//初始化 
000094  4e89              LDR      r6,|L1.700|
000096  9016              STR      r0,[sp,#0x58]         ;55
000098  f88d705f          STRB     r7,[sp,#0x5f]         ;58
00009c  a916              ADD      r1,sp,#0x58
00009e  4630              MOV      r0,r6
0000a0  f7fffffe          BL       GPIO_Init
;;;60      
;;;61      
;;;62       GPIO_PinAFConfig(GPIOD,GPIO_PinSource0,GPIO_AF_FSMC);//PD0,AF12
0000a4  220c              MOVS     r2,#0xc
0000a6  2100              MOVS     r1,#0
0000a8  4650              MOV      r0,r10
0000aa  f7fffffe          BL       GPIO_PinAFConfig
;;;63       GPIO_PinAFConfig(GPIOD,GPIO_PinSource1,GPIO_AF_FSMC);//PD1,AF12
0000ae  220c              MOVS     r2,#0xc
0000b0  2101              MOVS     r1,#1
0000b2  4650              MOV      r0,r10
0000b4  f7fffffe          BL       GPIO_PinAFConfig
;;;64       GPIO_PinAFConfig(GPIOD,GPIO_PinSource4,GPIO_AF_FSMC);
0000b8  220c              MOVS     r2,#0xc
0000ba  2104              MOVS     r1,#4
0000bc  4650              MOV      r0,r10
0000be  f7fffffe          BL       GPIO_PinAFConfig
;;;65       GPIO_PinAFConfig(GPIOD,GPIO_PinSource5,GPIO_AF_FSMC); 
0000c2  220c              MOVS     r2,#0xc
0000c4  2105              MOVS     r1,#5
0000c6  4650              MOV      r0,r10
0000c8  f7fffffe          BL       GPIO_PinAFConfig
;;;66       GPIO_PinAFConfig(GPIOD,GPIO_PinSource8,GPIO_AF_FSMC); 
0000cc  220c              MOVS     r2,#0xc
0000ce  2108              MOVS     r1,#8
0000d0  4650              MOV      r0,r10
0000d2  f7fffffe          BL       GPIO_PinAFConfig
;;;67       GPIO_PinAFConfig(GPIOD,GPIO_PinSource9,GPIO_AF_FSMC);
0000d6  220c              MOVS     r2,#0xc
0000d8  2109              MOVS     r1,#9
0000da  4650              MOV      r0,r10
0000dc  f7fffffe          BL       GPIO_PinAFConfig
;;;68       GPIO_PinAFConfig(GPIOD,GPIO_PinSource10,GPIO_AF_FSMC);
0000e0  220c              MOVS     r2,#0xc
0000e2  210a              MOVS     r1,#0xa
0000e4  4650              MOV      r0,r10
0000e6  f7fffffe          BL       GPIO_PinAFConfig
;;;69       GPIO_PinAFConfig(GPIOD,GPIO_PinSource11,GPIO_AF_FSMC);
0000ea  220c              MOVS     r2,#0xc
0000ec  210b              MOVS     r1,#0xb
0000ee  4650              MOV      r0,r10
0000f0  f7fffffe          BL       GPIO_PinAFConfig
;;;70     	GPIO_PinAFConfig(GPIOD,GPIO_PinSource12,GPIO_AF_FSMC);
0000f4  220c              MOVS     r2,#0xc
0000f6  4611              MOV      r1,r2
0000f8  4650              MOV      r0,r10
0000fa  f7fffffe          BL       GPIO_PinAFConfig
;;;71       GPIO_PinAFConfig(GPIOD,GPIO_PinSource13,GPIO_AF_FSMC);
0000fe  220c              MOVS     r2,#0xc
000100  210d              MOVS     r1,#0xd
000102  4650              MOV      r0,r10
000104  f7fffffe          BL       GPIO_PinAFConfig
;;;72       GPIO_PinAFConfig(GPIOD,GPIO_PinSource14,GPIO_AF_FSMC);
000108  220c              MOVS     r2,#0xc
00010a  210e              MOVS     r1,#0xe
00010c  4650              MOV      r0,r10
00010e  f7fffffe          BL       GPIO_PinAFConfig
;;;73       GPIO_PinAFConfig(GPIOD,GPIO_PinSource15,GPIO_AF_FSMC);//PD15,AF12
000112  220c              MOVS     r2,#0xc
000114  210f              MOVS     r1,#0xf
000116  4650              MOV      r0,r10
000118  f7fffffe          BL       GPIO_PinAFConfig
;;;74      
;;;75       GPIO_PinAFConfig(GPIOE,GPIO_PinSource0,GPIO_AF_FSMC);
00011c  220c              MOVS     r2,#0xc
00011e  2100              MOVS     r1,#0
000120  4648              MOV      r0,r9
000122  f7fffffe          BL       GPIO_PinAFConfig
;;;76       GPIO_PinAFConfig(GPIOE,GPIO_PinSource1,GPIO_AF_FSMC);
000126  220c              MOVS     r2,#0xc
000128  2101              MOVS     r1,#1
00012a  4648              MOV      r0,r9
00012c  f7fffffe          BL       GPIO_PinAFConfig
;;;77     	GPIO_PinAFConfig(GPIOE,GPIO_PinSource7,GPIO_AF_FSMC);//PE7,AF12
000130  220c              MOVS     r2,#0xc
000132  2107              MOVS     r1,#7
000134  4648              MOV      r0,r9
000136  f7fffffe          BL       GPIO_PinAFConfig
;;;78       GPIO_PinAFConfig(GPIOE,GPIO_PinSource8,GPIO_AF_FSMC);
00013a  220c              MOVS     r2,#0xc
00013c  2108              MOVS     r1,#8
00013e  4648              MOV      r0,r9
000140  f7fffffe          BL       GPIO_PinAFConfig
;;;79       GPIO_PinAFConfig(GPIOE,GPIO_PinSource9,GPIO_AF_FSMC);
000144  220c              MOVS     r2,#0xc
000146  2109              MOVS     r1,#9
000148  4648              MOV      r0,r9
00014a  f7fffffe          BL       GPIO_PinAFConfig
;;;80       GPIO_PinAFConfig(GPIOE,GPIO_PinSource10,GPIO_AF_FSMC);
00014e  220c              MOVS     r2,#0xc
000150  210a              MOVS     r1,#0xa
000152  4648              MOV      r0,r9
000154  f7fffffe          BL       GPIO_PinAFConfig
;;;81       GPIO_PinAFConfig(GPIOE,GPIO_PinSource11,GPIO_AF_FSMC);
000158  220c              MOVS     r2,#0xc
00015a  210b              MOVS     r1,#0xb
00015c  4648              MOV      r0,r9
00015e  f7fffffe          BL       GPIO_PinAFConfig
;;;82       GPIO_PinAFConfig(GPIOE,GPIO_PinSource12,GPIO_AF_FSMC);
000162  220c              MOVS     r2,#0xc
000164  4611              MOV      r1,r2
000166  4648              MOV      r0,r9
000168  f7fffffe          BL       GPIO_PinAFConfig
;;;83       GPIO_PinAFConfig(GPIOE,GPIO_PinSource13,GPIO_AF_FSMC);
00016c  220c              MOVS     r2,#0xc
00016e  210d              MOVS     r1,#0xd
000170  4648              MOV      r0,r9
000172  f7fffffe          BL       GPIO_PinAFConfig
;;;84       GPIO_PinAFConfig(GPIOE,GPIO_PinSource14,GPIO_AF_FSMC);
000176  220c              MOVS     r2,#0xc
000178  210e              MOVS     r1,#0xe
00017a  4648              MOV      r0,r9
00017c  f7fffffe          BL       GPIO_PinAFConfig
;;;85       GPIO_PinAFConfig(GPIOE,GPIO_PinSource15,GPIO_AF_FSMC);//PE15,AF12
000180  220c              MOVS     r2,#0xc
000182  210f              MOVS     r1,#0xf
000184  4648              MOV      r0,r9
000186  f7fffffe          BL       GPIO_PinAFConfig
;;;86      
;;;87       GPIO_PinAFConfig(GPIOF,GPIO_PinSource0,GPIO_AF_FSMC);//PF0,AF12
00018a  220c              MOVS     r2,#0xc
00018c  2100              MOVS     r1,#0
00018e  4640              MOV      r0,r8
000190  f7fffffe          BL       GPIO_PinAFConfig
;;;88       GPIO_PinAFConfig(GPIOF,GPIO_PinSource1,GPIO_AF_FSMC);//PF1,AF12
000194  220c              MOVS     r2,#0xc
000196  2101              MOVS     r1,#1
000198  4640              MOV      r0,r8
00019a  f7fffffe          BL       GPIO_PinAFConfig
;;;89       GPIO_PinAFConfig(GPIOF,GPIO_PinSource2,GPIO_AF_FSMC);//PF2,AF12
00019e  220c              MOVS     r2,#0xc
0001a0  2102              MOVS     r1,#2
0001a2  4640              MOV      r0,r8
0001a4  f7fffffe          BL       GPIO_PinAFConfig
;;;90       GPIO_PinAFConfig(GPIOF,GPIO_PinSource3,GPIO_AF_FSMC);//PF3,AF12
0001a8  220c              MOVS     r2,#0xc
0001aa  2103              MOVS     r1,#3
0001ac  4640              MOV      r0,r8
0001ae  f7fffffe          BL       GPIO_PinAFConfig
;;;91       GPIO_PinAFConfig(GPIOF,GPIO_PinSource4,GPIO_AF_FSMC);//PF4,AF12
0001b2  220c              MOVS     r2,#0xc
0001b4  2104              MOVS     r1,#4
0001b6  4640              MOV      r0,r8
0001b8  f7fffffe          BL       GPIO_PinAFConfig
;;;92       GPIO_PinAFConfig(GPIOF,GPIO_PinSource5,GPIO_AF_FSMC);//PF5,AF12
0001bc  220c              MOVS     r2,#0xc
0001be  2105              MOVS     r1,#5
0001c0  4640              MOV      r0,r8
0001c2  f7fffffe          BL       GPIO_PinAFConfig
;;;93       GPIO_PinAFConfig(GPIOF,GPIO_PinSource12,GPIO_AF_FSMC);//PF12,AF12
0001c6  220c              MOVS     r2,#0xc
0001c8  4611              MOV      r1,r2
0001ca  4640              MOV      r0,r8
0001cc  f7fffffe          BL       GPIO_PinAFConfig
;;;94       GPIO_PinAFConfig(GPIOF,GPIO_PinSource13,GPIO_AF_FSMC);//PF13,AF12
0001d0  220c              MOVS     r2,#0xc
0001d2  210d              MOVS     r1,#0xd
0001d4  4640              MOV      r0,r8
0001d6  f7fffffe          BL       GPIO_PinAFConfig
;;;95       GPIO_PinAFConfig(GPIOF,GPIO_PinSource14,GPIO_AF_FSMC);//PF14,AF12
0001da  220c              MOVS     r2,#0xc
0001dc  210e              MOVS     r1,#0xe
0001de  4640              MOV      r0,r8
0001e0  f7fffffe          BL       GPIO_PinAFConfig
;;;96       GPIO_PinAFConfig(GPIOF,GPIO_PinSource15,GPIO_AF_FSMC);//PF15,AF12
0001e4  220c              MOVS     r2,#0xc
0001e6  210f              MOVS     r1,#0xf
0001e8  4640              MOV      r0,r8
0001ea  f7fffffe          BL       GPIO_PinAFConfig
;;;97     	
;;;98       GPIO_PinAFConfig(GPIOG,GPIO_PinSource0,GPIO_AF_FSMC);
0001ee  220c              MOVS     r2,#0xc
0001f0  2100              MOVS     r1,#0
0001f2  4630              MOV      r0,r6
0001f4  f7fffffe          BL       GPIO_PinAFConfig
;;;99       GPIO_PinAFConfig(GPIOG,GPIO_PinSource1,GPIO_AF_FSMC);
0001f8  220c              MOVS     r2,#0xc
0001fa  2101              MOVS     r1,#1
0001fc  4630              MOV      r0,r6
0001fe  f7fffffe          BL       GPIO_PinAFConfig
;;;100      GPIO_PinAFConfig(GPIOG,GPIO_PinSource2,GPIO_AF_FSMC);
000202  220c              MOVS     r2,#0xc
000204  2102              MOVS     r1,#2
000206  4630              MOV      r0,r6
000208  f7fffffe          BL       GPIO_PinAFConfig
;;;101      GPIO_PinAFConfig(GPIOG,GPIO_PinSource3,GPIO_AF_FSMC);
00020c  220c              MOVS     r2,#0xc
00020e  2103              MOVS     r1,#3
000210  4630              MOV      r0,r6
000212  f7fffffe          BL       GPIO_PinAFConfig
;;;102      GPIO_PinAFConfig(GPIOG,GPIO_PinSource4,GPIO_AF_FSMC);
000216  220c              MOVS     r2,#0xc
000218  2104              MOVS     r1,#4
00021a  4630              MOV      r0,r6
00021c  f7fffffe          BL       GPIO_PinAFConfig
;;;103      GPIO_PinAFConfig(GPIOG,GPIO_PinSource5,GPIO_AF_FSMC);
000220  220c              MOVS     r2,#0xc
000222  2105              MOVS     r1,#5
000224  4630              MOV      r0,r6
000226  f7fffffe          BL       GPIO_PinAFConfig
;;;104      GPIO_PinAFConfig(GPIOG,GPIO_PinSource9,GPIO_AF_FSMC);
00022a  220c              MOVS     r2,#0xc
00022c  2109              MOVS     r1,#9
00022e  4630              MOV      r0,r6
000230  f7fffffe          BL       GPIO_PinAFConfig
;;;105    	
;;;106     	  
;;;107     	readWriteTiming.FSMC_AddressSetupTime = 0x06;	 //地址建立时间（ADDSET）为1个HCLK 1/36M=27ns
000234  2006              MOVS     r0,#6
000236  e9cd0400          STRD     r0,r4,[sp,#0]
;;;108      readWriteTiming.FSMC_AddressHoldTime = 0x00;	 //地址保持时间（ADDHLD）模式A未用到	
;;;109      readWriteTiming.FSMC_DataSetupTime = 0x04;		 ////数据保持时间（DATAST）为9个HCLK 6*9=54ns	 	 
00023a  2004              MOVS     r0,#4
00023c  e9cd0402          STRD     r0,r4,[sp,#8]
;;;110      readWriteTiming.FSMC_BusTurnAroundDuration = 0x00;
;;;111      readWriteTiming.FSMC_CLKDivision = 0x00;
;;;112      readWriteTiming.FSMC_DataLatency = 0x00;
000240  9404              STR      r4,[sp,#0x10]
000242  9405              STR      r4,[sp,#0x14]
000244  e9cd4506          STRD     r4,r5,[sp,#0x18]
;;;113      readWriteTiming.FSMC_AccessMode = FSMC_AccessMode_A;	 //模式A 
;;;114        
;;;115    
;;;116     
;;;117      FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM2;//  这里我们使用NE2 ，也就对应BTCR[2],[3]。
;;;118      FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable; 
;;;119      FSMC_NORSRAMInitStructure.FSMC_MemoryType =FSMC_MemoryType_SRAM;// FSMC_MemoryType_SRAM;  //SRAM   
;;;120      FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;//存储器数据宽度为16bit  
000248  2010              MOVS     r0,#0x10
00024a  9408              STR      r4,[sp,#0x20]
00024c  e9cd4009          STRD     r4,r0,[sp,#0x24]
;;;121      FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode =FSMC_BurstAccessMode_Disable;// FSMC_BurstAccessMode_Disable; 
;;;122      FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
000250  940b              STR      r4,[sp,#0x2c]
;;;123    	FSMC_NORSRAMInitStructure.FSMC_AsynchronousWait=FSMC_AsynchronousWait_Disable;
000252  940d              STR      r4,[sp,#0x34]
;;;124      FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;   
000254  940c              STR      r4,[sp,#0x30]
;;;125      FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;  
;;;126      FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;	//存储器写使能 
000256  0200              LSLS     r0,r0,#8
000258  940e              STR      r4,[sp,#0x38]
00025a  e9cd400f          STRD     r4,r0,[sp,#0x3c]
;;;127      FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;  
;;;128      FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable; // 读写使用相同的时序
00025e  9411              STR      r4,[sp,#0x44]
;;;129      FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;  
;;;130      FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &readWriteTiming;
000260  4668              MOV      r0,sp
000262  9412              STR      r4,[sp,#0x48]
000264  e9cd4013          STRD     r4,r0,[sp,#0x4c]
;;;131      FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &readWriteTiming; //读写同样时序
000268  f8cdd054          STR      sp,[sp,#0x54]
;;;132    
;;;133      FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure);  //初始化FSMC配置
00026c  a807              ADD      r0,sp,#0x1c
00026e  f7fffffe          BL       FSMC_NORSRAMInit
;;;134    
;;;135     	FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM2, ENABLE);  // 使能BANK1区域3										  
000272  2101              MOVS     r1,#1
000274  2002              MOVS     r0,#2
000276  f7fffffe          BL       FSMC_NORSRAMCmd
;;;136    											
;;;137    }
00027a  b018              ADD      sp,sp,#0x60
00027c  e8bd87f0          POP      {r4-r10,pc}
;;;138    	 
                          ENDP

                  FSMC_SRAM_WriteBuffer PROC
;;;144    //n:要写入的字节数
;;;145    void FSMC_SRAM_WriteBuffer(u8* pBuffer,u32 WriteAddr,u32 n)
000280  b510              PUSH     {r4,lr}
;;;146    {
000282  2a00              CMP      r2,#0
000284  d007              BEQ      |L1.662|
                  |L1.646|
;;;147    	for(;n!=0;n--)  
;;;148    	{										    
;;;149    		*(vu8*)(Bank1_SRAM2_ADDR+WriteAddr)=*pBuffer;	  
000286  f04f43c8          MOV      r3,#0x64000000
00028a  f8104b01          LDRB     r4,[r0],#1
00028e  545c              STRB     r4,[r3,r1]
000290  1c49              ADDS     r1,r1,#1
000292  1e52              SUBS     r2,r2,#1
000294  d1f7              BNE      |L1.646|
                  |L1.662|
;;;150    		WriteAddr++;
;;;151    		pBuffer++;
;;;152    	}   
;;;153    }																			    
000296  bd10              POP      {r4,pc}
;;;154    //在指定地址((WriteAddr+Bank1_SRAM2_ADDR))开始,连续读出n个字节.
                          ENDP

                  FSMC_SRAM_ReadBuffer PROC
;;;157    //n:要写入的字节数
;;;158    void FSMC_SRAM_ReadBuffer(u8* pBuffer,u32 ReadAddr,u32 n)
000298  2a00              CMP      r2,#0
;;;159    {
00029a  d007              BEQ      |L1.684|
                  |L1.668|
;;;160    	for(;n!=0;n--)  
;;;161    	{											    
;;;162    		*pBuffer++=*(vu8*)(Bank1_SRAM2_ADDR+ReadAddr);    
00029c  f04f43c8          MOV      r3,#0x64000000
0002a0  5c5b              LDRB     r3,[r3,r1]
0002a2  1c49              ADDS     r1,r1,#1
0002a4  f8003b01          STRB     r3,[r0],#1
0002a8  1e52              SUBS     r2,r2,#1
0002aa  d1f7              BNE      |L1.668|
                  |L1.684|
;;;163    		ReadAddr++;
;;;164    	}  
;;;165    } 
0002ac  4770              BX       lr
;;;166     
                          ENDP

0002ae  0000              DCW      0x0000
                  |L1.688|
                          DCD      0x40020c00
                  |L1.692|
                          DCD      0x40021000
                  |L1.696|
                          DCD      0x40021400
                  |L1.700|
                          DCD      0x40021800

;*** Start embedded assembler ***

#line 1 "..\\HARDWARE\\SRAM\\sram.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_sram_c_85dea831____REV16|
#line 129 "..\\CORE\\core_cmInstr.h"
|__asm___6_sram_c_85dea831____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_sram_c_85dea831____REVSH|
#line 144
|__asm___6_sram_c_85dea831____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
