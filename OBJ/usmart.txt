; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\usmart.o --asm_dir=..\OBJ\ --list_dir=..\OBJ\ --depend=..\obj\usmart.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\CORE -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\FWLIB\STM32F4xx_StdPeriph_Driver\inc -I..\USER -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\HARDWARE\ETHERNET -I..\HARDWARE\TIMER -I..\HARDWARE\LED -I..\HARDWARE\BEEP -I..\HARDWARE\RTC -I..\HARDWARE\ADC -I..\HARDWARE\SRAM -I..\HARDWARE\InterTemperate -I..\FWLIB\STM32F4x7_ETH_Driver\inc -I..\MALLOC -I..\USMART -I..\HARDWARE -I..\ETHERCAT -IE:\EtherCAT\EthercatMaster\EthercatMaster_V3.0-新电路板\USER\RTE -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F40_41xxx -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS --omf_browse=..\obj\usmart.crf ..\USMART\usmart.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                  usmart_sys_cmd_exe PROC
;;;74     //0,成功处理;其他,错误代码;
;;;75     u8 usmart_sys_cmd_exe(u8 *str)
000000  b5f0              PUSH     {r4-r7,lr}
;;;76     {
000002  b08d              SUB      sp,sp,#0x34
000004  4604              MOV      r4,r0
;;;77     	u8 i;
;;;78     	u8 sfname[MAX_FNAME_LEN];//存放本地函数名
;;;79     	u8 pnum;
;;;80     	u8 rval;
;;;81     	u32 res;  
;;;82     	res=usmart_get_cmdname(str,sfname,&i,MAX_FNAME_LEN);//得到指令及指令长度
000006  231e              MOVS     r3,#0x1e
000008  aa08              ADD      r2,sp,#0x20
00000a  4669              MOV      r1,sp
00000c  f7fffffe          BL       usmart_get_cmdname
;;;83     	if(res)return USMART_FUNCERR;//错误的指令 
000010  9009              STR      r0,[sp,#0x24]
000012  2800              CMP      r0,#0
000014  d172              BNE      |L1.252|
;;;84     	str+=i;	 	 			    
000016  f89d0020          LDRB     r0,[sp,#0x20]
00001a  1827              ADDS     r7,r4,r0
;;;85     	for(i=0;i<sizeof(sys_cmd_tab)/4;i++)//支持的系统指令
00001c  2500              MOVS     r5,#0
;;;86     	{
;;;87     		if(usmart_strcmp(sfname,sys_cmd_tab[i])==0)break;
00001e  4c3e              LDR      r4,|L1.280|
000020  f88d5020          STRB     r5,[sp,#0x20]         ;85
                  |L1.36|
000024  f89d0020          LDRB     r0,[sp,#0x20]
000028  f8541020          LDR      r1,[r4,r0,LSL #2]
00002c  4668              MOV      r0,sp
00002e  f7fffffe          BL       usmart_strcmp
000032  b138              CBZ      r0,|L1.68|
000034  f89d0020          LDRB     r0,[sp,#0x20]         ;85
000038  1c40              ADDS     r0,r0,#1              ;85
00003a  b2c0              UXTB     r0,r0                 ;85
00003c  f88d0020          STRB     r0,[sp,#0x20]         ;85
000040  2807              CMP      r0,#7                 ;85
000042  d3ef              BCC      |L1.36|
                  |L1.68|
;;;88     	}
;;;89     	switch(i)
000044  f89d0020          LDRB     r0,[sp,#0x20]
000048  2604              MOVS     r6,#4                 ;84
;;;90     	{					   
;;;91     		case 0:
;;;92     		case 1://帮助指令
;;;93     			printf("\r\n");
;;;94     #if USMART_USE_HELP
;;;95     			printf("------------------------USMART V3.1------------------------ \r\n");
;;;96     			printf("    USMART是由ALIENTEK开发的一个灵巧的串口调试互交组件,通过 \r\n");
;;;97     			printf("它,你可以通过串口助手调用程序里面的任何函数,并执行.因此,你可\r\n");
;;;98     			printf("以随意更改函数的输入参数(支持数字(10/16进制)、字符串、函数入\r\n");	  
;;;99     			printf("口地址等作为参数),单个函数最多支持10个输入参数,并支持函数返 \r\n");
;;;100    			printf("回值显示.新增参数显示进制设置功能,新增进制转换功能.\r\n");
;;;101    			printf("技术支持:www.openedv.com\r\n");
;;;102    			printf("USMART有7个系统命令:\r\n");
;;;103    			printf("?:      获取帮助信息\r\n");
;;;104    			printf("help:   获取帮助信息\r\n");
;;;105    			printf("list:   可用的函数列表\r\n\n");
;;;106    			printf("id:     可用函数的ID列表\r\n\n");
;;;107    			printf("hex:    参数16进制显示,后跟空格+数字即执行进制转换\r\n\n");
;;;108    			printf("dec:    参数10进制显示,后跟空格+数字即执行进制转换\r\n\n");
;;;109    			printf("runtime:1,开启函数运行计时;0,关闭函数运行计时;\r\n\n");
;;;110    			printf("请按照程序编写格式输入函数名及参数并以回车键结束.\r\n");    
;;;111    			printf("--------------------------ALIENTEK------------------------- \r\n");
;;;112    #else
;;;113    			printf("指令失效\r\n");
;;;114    #endif
;;;115    			break;
;;;116    		case 2://查询指令
;;;117    			printf("\r\n");
;;;118    			printf("-------------------------函数清单--------------------------- \r\n");
;;;119    			for(i=0;i<usmart_dev.fnum;i++)printf("%s\r\n",usmart_dev.funs[i].name);
00004a  4c34              LDR      r4,|L1.284|
00004c  2807              CMP      r0,#7                 ;89
00004e  d255              BCS      |L1.252|
000050  e8dff000          TBB      [pc,r0]               ;89
000054  0404395a          DCB      0x04,0x04,0x39,0x5a
000058  605f5e00          DCB      0x60,0x5f,0x5e,0x00
00005c  a030              ADR      r0,|L1.288|
00005e  f7fffffe          BL       __2printf
000062  a030              ADR      r0,|L1.292|
000064  f7fffffe          BL       __2printf
000068  a03e              ADR      r0,|L1.356|
00006a  f7fffffe          BL       __2printf
00006e  a04d              ADR      r0,|L1.420|
000070  f7fffffe          BL       __2printf
000074  a05b              ADR      r0,|L1.484|
000076  f7fffffe          BL       __2printf
00007a  a06a              ADR      r0,|L1.548|
00007c  f7fffffe          BL       __2printf
000080  a078              ADR      r0,|L1.612|
000082  f7fffffe          BL       __2printf
000086  a085              ADR      r0,|L1.668|
000088  f7fffffe          BL       __2printf
00008c  a08a              ADR      r0,|L1.696|
00008e  f7fffffe          BL       __2printf
000092  a08f              ADR      r0,|L1.720|
000094  f7fffffe          BL       __2printf
000098  a093              ADR      r0,|L1.744|
00009a  f7fffffe          BL       __2printf
00009e  a098              ADR      r0,|L1.768|
0000a0  f7fffffe          BL       __2printf
0000a4  a09d              ADR      r0,|L1.796|
0000a6  f7fffffe          BL       __2printf
0000aa  a0a3              ADR      r0,|L1.824|
0000ac  f7fffffe          BL       __2printf
0000b0  a0af              ADR      r0,|L1.880|
0000b2  f7fffffe          BL       __2printf
0000b6  a0bc              ADR      r0,|L1.936|
0000b8  f7fffffe          BL       __2printf
0000bc  a0c7              ADR      r0,|L1.988|
0000be  f7fffffe          BL       __2printf
0000c2  a0d3              ADR      r0,|L1.1040|
0000c4  e01b              B        |L1.254|
0000c6  a016              ADR      r0,|L1.288|
0000c8  f7fffffe          BL       __2printf
0000cc  a0e0              ADR      r0,|L1.1104|
0000ce  f7fffffe          BL       __2printf
0000d2  f88d5020          STRB     r5,[sp,#0x20]
0000d6  e00b              B        |L1.240|
                  |L1.216|
0000d8  6821              LDR      r1,[r4,#0]  ; usmart_dev
0000da  eb0600c0          ADD      r0,r6,r0,LSL #3
0000de  5809              LDR      r1,[r1,r0]
0000e0  a0eb              ADR      r0,|L1.1168|
0000e2  f7fffffe          BL       __2printf
0000e6  f89d0020          LDRB     r0,[sp,#0x20]
0000ea  1c40              ADDS     r0,r0,#1
0000ec  f88d0020          STRB     r0,[sp,#0x20]
                  |L1.240|
0000f0  7d21              LDRB     r1,[r4,#0x14]  ; usmart_dev
0000f2  f89d0020          LDRB     r0,[sp,#0x20]
0000f6  4281              CMP      r1,r0
0000f8  d8ee              BHI      |L1.216|
0000fa  e24e              B        |L1.1434|
                  |L1.252|
0000fc  e24f              B        |L1.1438|
                  |L1.254|
0000fe  f7fffffe          BL       __2printf
;;;120    			printf("\r\n");
;;;121    			break;	 
;;;122    		case 3://查询ID
;;;123    			printf("\r\n");
;;;124    			printf("-------------------------函数 ID --------------------------- \r\n");
;;;125    			for(i=0;i<usmart_dev.fnum;i++)
;;;126    			{
;;;127    				usmart_get_fname((u8*)usmart_dev.funs[i].name,sfname,&pnum,&rval);//得到本地函数名 
;;;128    				printf("%s id is:\r\n0X%08X\r\n",sfname,usmart_dev.funs[i].func); //显示ID
;;;129    			}
;;;130    			printf("\r\n");
;;;131    			break;
;;;132    		case 4://hex指令
;;;133    			printf("\r\n");
;;;134    			usmart_get_aparm(str,sfname,&i);
;;;135    			if(i==0)//参数正常
;;;136    			{
;;;137    				i=usmart_str2num(sfname,&res);	   	//记录该参数	
;;;138    				if(i==0)						  	//进制转换功能
;;;139    				{
;;;140    					printf("HEX:0X%X\r\n",res);	   	//转为16进制
;;;141    				}else if(i!=4)return USMART_PARMERR;//参数错误.
;;;142    				else 				   				//参数显示设定功能
;;;143    				{
;;;144    					printf("16进制参数显示!\r\n");
;;;145    					usmart_dev.sptype=SP_TYPE_HEX;  
;;;146    				}
;;;147    
;;;148    			}else return USMART_PARMERR;			//参数错误.
;;;149    			printf("\r\n"); 
;;;150    			break;
;;;151    		case 5://dec指令
;;;152    			printf("\r\n");
;;;153    			usmart_get_aparm(str,sfname,&i);
;;;154    			if(i==0)//参数正常
;;;155    			{
;;;156    				i=usmart_str2num(sfname,&res);	   	//记录该参数	
;;;157    				if(i==0)						   	//进制转换功能
;;;158    				{
;;;159    					printf("DEC:%lu\r\n",res);	   	//转为10进制
;;;160    				}else if(i!=4)return USMART_PARMERR;//参数错误.
;;;161    				else 				   				//参数显示设定功能
;;;162    				{
;;;163    					printf("10进制参数显示!\r\n");
;;;164    					usmart_dev.sptype=SP_TYPE_DEC;  
;;;165    				}
;;;166    
;;;167    			}else return USMART_PARMERR;			//参数错误. 
;;;168    			printf("\r\n"); 
;;;169    			break;	 
;;;170    		case 6://runtime指令,设置是否显示函数执行时间
;;;171    			printf("\r\n");
;;;172    			usmart_get_aparm(str,sfname,&i);
;;;173    			if(i==0)//参数正常
;;;174    			{
;;;175    				i=usmart_str2num(sfname,&res);	   		//记录该参数	
;;;176    				if(i==0)						   		//读取指定地址数据功能
;;;177    				{
;;;178    					if(USMART_ENTIMX_SCAN==0)printf("\r\nError! \r\nTo EN RunTime function,Please set USMART_ENTIMX_SCAN = 1 first!\r\n");//报错
;;;179    					else
;;;180    					{
;;;181    						usmart_dev.runtimeflag=res;
;;;182    						if(usmart_dev.runtimeflag)printf("Run Time Calculation ON\r\n");
;;;183    						else printf("Run Time Calculation OFF\r\n"); 
;;;184    					}
;;;185    				}else return USMART_PARMERR;   			//未带参数,或者参数错误	 
;;;186     			}else return USMART_PARMERR;				//参数错误. 
;;;187    			printf("\r\n"); 
;;;188    			break;	    
;;;189    		default://非法指令
;;;190    			return USMART_FUNCERR;
;;;191    	}
;;;192    	return 0;
000102  2000              MOVS     r0,#0
                  |L1.260|
;;;193    }
000104  b00d              ADD      sp,sp,#0x34
000106  bdf0              POP      {r4-r7,pc}
000108  a005              ADR      r0,|L1.288|
00010a  f7fffffe          BL       __2printf
00010e  e1c3              B        |L1.1176|
000110  e224              B        |L1.1372|
000112  e204              B        |L1.1310|
000114  e1e3              B        |L1.1246|
000116  0000              DCW      0x0000
                  |L1.280|
                          DCD      ||.data||
                  |L1.284|
                          DCD      usmart_dev
                  |L1.288|
000120  0d0a00            DCB      "\r\n",0
000123  00                DCB      0
                  |L1.292|
000124  2d2d2d2d          DCB      "------------------------USMART V3.1--------------------"
000128  2d2d2d2d
00012c  2d2d2d2d
000130  2d2d2d2d
000134  2d2d2d2d
000138  2d2d2d2d
00013c  55534d41
000140  52542056
000144  332e312d
000148  2d2d2d2d
00014c  2d2d2d2d
000150  2d2d2d2d
000154  2d2d2d2d
000158  2d2d2d  
00015b  2d2d2d2d          DCB      "---- \r\n",0
00015f  200d0a00
000163  00                DCB      0
                  |L1.356|
000164  20202020          DCB      "    USMART",202,199,211,201,"ALIENTEK",191,170,183,162,181
000168  55534d41
00016c  5254cac7
000170  d3c9414c
000174  49454e54
000178  454bbfaa
00017c  b7a2b5  
00017f  c4d2bbb8          DCB      196,210,187,184,246,193,233,199,201,181,196,180,174,191,218
000183  f6c1e9c7
000187  c9b5c4b4
00018b  aebfda  
00018e  b5f7cad4          DCB      181,247,202,212,187,165,189,187,215,233,188,254,",",205,168
000192  bba5bdbb
000196  d7e9bcfe
00019a  2ccda8  
00019d  b9fd200d          DCB      185,253," \r\n",0
0001a1  0a00    
0001a3  00                DCB      0
                  |L1.420|
0001a4  cbfc2cc4          DCB      203,252,",",196,227,191,201,210,212,205,168,185,253,180,174
0001a8  e3bfc9d2
0001ac  d4cda8b9
0001b0  fdb4ae  
0001b3  bfdad6fa          DCB      191,218,214,250,202,214,181,247,211,195,179,204,208,242,192
0001b7  cad6b5f7
0001bb  d3c3b3cc
0001bf  d0f2c0  
0001c2  efc3e6b5          DCB      239,195,230,181,196,200,206,186,206,186,175,202,253,",",178
0001c6  c4c8ceba
0001ca  cebaafca
0001ce  fd2cb2  
0001d1  a2d6b4d0          DCB      162,214,180,208,208,".",210,242,180,203,",",196,227,191,201
0001d5  d02ed2f2
0001d9  b4cb2cc4
0001dd  e3bfc9  
0001e0  0d0a00            DCB      "\r\n",0
0001e3  00                DCB      0
                  |L1.484|
0001e4  d2d4cbe6          DCB      210,212,203,230,210,226,184,252,184,196,186,175,202,253,181
0001e8  d2e2b8fc
0001ec  b8c4baaf
0001f0  cafdb5  
0001f3  c4cae4c8          DCB      196,202,228,200,235,178,206,202,253,"(",214,167,179,214,202
0001f7  ebb2ceca
0001fb  fd28d6a7
0001ff  b3d6ca  
000202  fdd7d628          DCB      253,215,214,"(10/16",189,248,214,198,")",161,162,215,214
000206  31302f31
00020a  36bdf8d6
00020e  c629a1a2
000212  d7d6    
000214  b7fbb4ae          DCB      183,251,180,174,161,162,186,175,202,253,200,235,"\r\n",0
000218  a1a2baaf
00021c  cafdc8eb
000220  0d0a00  
000223  00                DCB      0
                  |L1.548|
000224  bfdab5d8          DCB      191,218,181,216,214,183,181,200,215,247,206,170,178,206,202
000228  d6b7b5c8
00022c  d7f7ceaa
000230  b2ceca  
000233  fd292cb5          DCB      253,"),",181,165,184,246,186,175,202,253,215,238,182,224
000237  a5b8f6ba
00023b  afcafdd7
00023f  eeb6e0  
000242  d6a7b3d6          DCB      214,167,179,214,"10",184,246,202,228,200,235,178,206,202
000246  3130b8f6
00024a  cae4c8eb
00024e  b2ceca  
000251  fd2cb2a2          DCB      253,",",178,162,214,167,179,214,186,175,202,253,183,181," "
000255  d6a7b3d6
000259  baafcafd
00025d  b7b520  
000260  0d0a00            DCB      "\r\n",0
000263  00                DCB      0
                  |L1.612|
000264  bbd8d6b5          DCB      187,216,214,181,207,212,202,190,".",208,194,212,246,178,206
000268  cfd4cabe
00026c  2ed0c2d4
000270  f6b2ce  
000273  cafdcfd4          DCB      202,253,207,212,202,190,189,248,214,198,201,232,214,195,185
000277  cabebdf8
00027b  d6c6c9e8
00027f  d6c3b9  
000282  a6c4dc2c          DCB      166,196,220,",",208,194,212,246,189,248,214,198,215,170,187
000286  d0c2d4f6
00028a  bdf8d6c6
00028e  d7aabb  
000291  bbb9a6c4          DCB      187,185,166,196,220,".\r\n",0
000295  dc2e0d0a
000299  00      
00029a  00                DCB      0
00029b  00                DCB      0
                  |L1.668|
00029c  bcbccaf5          DCB      188,188,202,245,214,167,179,214,":www.openedv.com\r\n",0
0002a0  d6a7b3d6
0002a4  3a777777
0002a8  2e6f7065
0002ac  6e656476
0002b0  2e636f6d
0002b4  0d0a00  
0002b7  00                DCB      0
                  |L1.696|
0002b8  55534d41          DCB      "USMART",211,208,"7",184,246,207,181,205,179,195,252,193
0002bc  5254d3d0
0002c0  37b8f6cf
0002c4  b5cdb3c3
0002c8  fcc1    
0002ca  ee3a0d0a          DCB      238,":\r\n",0
0002ce  00      
0002cf  00                DCB      0
                  |L1.720|
0002d0  3f3a2020          DCB      "?:      ",187,241,200,161,176,239,214,250,208,197,207,162
0002d4  20202020
0002d8  bbf1c8a1
0002dc  b0efd6fa
0002e0  d0c5cfa2
0002e4  0d0a00            DCB      "\r\n",0
0002e7  00                DCB      0
                  |L1.744|
0002e8  68656c70          DCB      "help:   ",187,241,200,161,176,239,214,250,208,197,207,162
0002ec  3a202020
0002f0  bbf1c8a1
0002f4  b0efd6fa
0002f8  d0c5cfa2
0002fc  0d0a00            DCB      "\r\n",0
0002ff  00                DCB      0
                  |L1.768|
000300  6c697374          DCB      "list:   ",191,201,211,195,181,196,186,175,202,253,193,208
000304  3a202020
000308  bfc9d3c3
00030c  b5c4baaf
000310  cafdc1d0
000314  b1ed0d0a          DCB      177,237,"\r\n\n",0
000318  0a00    
00031a  00                DCB      0
00031b  00                DCB      0
                  |L1.796|
00031c  69643a20          DCB      "id:     ",191,201,211,195,186,175,202,253,181,196,"ID",193
000320  20202020
000324  bfc9d3c3
000328  baafcafd
00032c  b5c44944
000330  c1      
000331  d0b1ed0d          DCB      208,177,237,"\r\n\n",0
000335  0a0a00  
                  |L1.824|
000338  6865783a          DCB      "hex:    ",178,206,202,253,"16",189,248,214,198,207,212,202
00033c  20202020
000340  b2cecafd
000344  3136bdf8
000348  d6c6cfd4
00034c  ca      
00034d  be2cbaf3          DCB      190,",",186,243,184,250,191,213,184,241,"+",202,253,215,214
000351  b8fabfd5
000355  b8f12bca
000359  fdd7d6  
00035c  bcb4d6b4          DCB      188,180,214,180,208,208,189,248,214,198,215,170,187,187,"\r"
000360  d0d0bdf8
000364  d6c6d7aa
000368  bbbb0d  
00036b  0a0a00            DCB      "\n\n",0
00036e  00                DCB      0
00036f  00                DCB      0
                  |L1.880|
000370  6465633a          DCB      "dec:    ",178,206,202,253,"10",189,248,214,198,207,212,202
000374  20202020
000378  b2cecafd
00037c  3130bdf8
000380  d6c6cfd4
000384  ca      
000385  be2cbaf3          DCB      190,",",186,243,184,250,191,213,184,241,"+",202,253,215,214
000389  b8fabfd5
00038d  b8f12bca
000391  fdd7d6  
000394  bcb4d6b4          DCB      188,180,214,180,208,208,189,248,214,198,215,170,187,187,"\r"
000398  d0d0bdf8
00039c  d6c6d7aa
0003a0  bbbb0d  
0003a3  0a0a00            DCB      "\n\n",0
0003a6  00                DCB      0
0003a7  00                DCB      0
                  |L1.936|
0003a8  72756e74          DCB      "runtime:1,",191,170,198,244,186,175,202,253,212,203,208
0003ac  696d653a
0003b0  312cbfaa
0003b4  c6f4baaf
0003b8  cafdd4cb
0003bc  d0      
0003bd  d0bcc6ca          DCB      208,188,198,202,177,";0,",185,216,177,213,186,175,202,253
0003c1  b13b302c
0003c5  b9d8b1d5
0003c9  baafcafd
0003cd  d4cbd0d0          DCB      212,203,208,208,188,198,202,177,";\r\n\n",0
0003d1  bcc6cab1
0003d5  3b0d0a0a
0003d9  00      
0003da  00                DCB      0
0003db  00                DCB      0
                  |L1.988|
0003dc  c7ebb0b4          DCB      199,235,176,180,213,213,179,204,208,242,177,224,208,180,184
0003e0  d5d5b3cc
0003e4  d0f2b1e0
0003e8  d0b4b8  
0003eb  f1cabdca          DCB      241,202,189,202,228,200,235,186,175,202,253,195,251,188,176
0003ef  e4c8ebba
0003f3  afcafdc3
0003f7  fbbcb0  
0003fa  b2cecafd          DCB      178,206,202,253,178,162,210,212,187,216,179,181,188,252,189
0003fe  b2a2d2d4
000402  bbd8b3b5
000406  bcfcbd  
000409  e1caf82e          DCB      225,202,248,".\r\n",0
00040d  0d0a00  
                  |L1.1040|
000410  2d2d2d2d          DCB      "--------------------------ALIENTEK---------------------"
000414  2d2d2d2d
000418  2d2d2d2d
00041c  2d2d2d2d
000420  2d2d2d2d
000424  2d2d2d2d
000428  2d2d414c
00042c  49454e54
000430  454b2d2d
000434  2d2d2d2d
000438  2d2d2d2d
00043c  2d2d2d2d
000440  2d2d2d2d
000444  2d2d2d  
000447  2d2d2d2d          DCB      "---- \r\n",0
00044b  200d0a00
00044f  00                DCB      0
                  |L1.1104|
000450  2d2d2d2d          DCB      "-------------------------",186,175,202,253,199,229,181,165
000454  2d2d2d2d
000458  2d2d2d2d
00045c  2d2d2d2d
000460  2d2d2d2d
000464  2d2d2d2d
000468  2dbaafca
00046c  fdc7e5b5
000470  a5      
000471  2d2d2d2d          DCB      "--------------------------- \r\n",0
000475  2d2d2d2d
000479  2d2d2d2d
00047d  2d2d2d2d
000481  2d2d2d2d
000485  2d2d2d2d
000489  2d2d2d20
00048d  0d0a00  
                  |L1.1168|
000490  25730d0a          DCB      "%s\r\n",0
000494  00      
000495  00                DCB      0
000496  00                DCB      0
000497  00                DCB      0
                  |L1.1176|
000498  a0eb              ADR      r0,|L1.2120|
00049a  f7fffffe          BL       __2printf
00049e  f88d5020          STRB     r5,[sp,#0x20]         ;125
0004a2  e016              B        |L1.1234|
                  |L1.1188|
0004a4  6821              LDR      r1,[r4,#0]            ;127  ; usmart_dev
0004a6  eb0600c0          ADD      r0,r6,r0,LSL #3       ;127
0004aa  ab0b              ADD      r3,sp,#0x2c           ;127
0004ac  5808              LDR      r0,[r1,r0]            ;127
0004ae  aa0a              ADD      r2,sp,#0x28           ;127
0004b0  4669              MOV      r1,sp                 ;127
0004b2  f7fffffe          BL       usmart_get_fname
0004b6  f89d1020          LDRB     r1,[sp,#0x20]         ;128
0004ba  6820              LDR      r0,[r4,#0]            ;128  ; usmart_dev
0004bc  f8502031          LDR      r2,[r0,r1,LSL #3]     ;128
0004c0  4669              MOV      r1,sp                 ;128
0004c2  a0f1              ADR      r0,|L1.2184|
0004c4  f7fffffe          BL       __2printf
0004c8  f89d0020          LDRB     r0,[sp,#0x20]         ;125
0004cc  1c40              ADDS     r0,r0,#1              ;125
0004ce  f88d0020          STRB     r0,[sp,#0x20]         ;125
                  |L1.1234|
0004d2  7d21              LDRB     r1,[r4,#0x14]         ;125  ; usmart_dev
0004d4  f89d0020          LDRB     r0,[sp,#0x20]         ;125
0004d8  4281              CMP      r1,r0                 ;125
0004da  d8e3              BHI      |L1.1188|
0004dc  e05d              B        |L1.1434|
                  |L1.1246|
0004de  f2af30c0          ADR      r0,|L1.288|
0004e2  f7fffffe          BL       __2printf
0004e6  aa08              ADD      r2,sp,#0x20           ;134
0004e8  4669              MOV      r1,sp                 ;134
0004ea  4638              MOV      r0,r7                 ;134
0004ec  f7fffffe          BL       usmart_get_aparm
0004f0  f89d0020          LDRB     r0,[sp,#0x20]         ;135
0004f4  2800              CMP      r0,#0                 ;135
0004f6  d143              BNE      |L1.1408|
0004f8  a909              ADD      r1,sp,#0x24           ;137
0004fa  4668              MOV      r0,sp                 ;137
0004fc  f7fffffe          BL       usmart_str2num
000500  f88d0020          STRB     r0,[sp,#0x20]         ;137
000504  b110              CBZ      r0,|L1.1292|
000506  2804              CMP      r0,#4                 ;141
000508  d13a              BNE      |L1.1408|
00050a  e002              B        |L1.1298|
                  |L1.1292|
00050c  a0e3              ADR      r0,|L1.2204|
00050e  9909              LDR      r1,[sp,#0x24]         ;140
000510  e01c              B        |L1.1356|
                  |L1.1298|
000512  a0e5              ADR      r0,|L1.2216|
000514  f7fffffe          BL       __2printf
000518  2001              MOVS     r0,#1                 ;145
00051a  75e0              STRB     r0,[r4,#0x17]         ;145
00051c  e03d              B        |L1.1434|
                  |L1.1310|
00051e  a0e1              ADR      r0,|L1.2212|
000520  f7fffffe          BL       __2printf
000524  aa08              ADD      r2,sp,#0x20           ;153
000526  4669              MOV      r1,sp                 ;153
000528  4638              MOV      r0,r7                 ;153
00052a  f7fffffe          BL       usmart_get_aparm
00052e  f89d0020          LDRB     r0,[sp,#0x20]         ;154
000532  bb28              CBNZ     r0,|L1.1408|
000534  a909              ADD      r1,sp,#0x24           ;156
000536  4668              MOV      r0,sp                 ;156
000538  f7fffffe          BL       usmart_str2num
00053c  f88d0020          STRB     r0,[sp,#0x20]         ;156
000540  b110              CBZ      r0,|L1.1352|
000542  2804              CMP      r0,#4                 ;160
000544  d11c              BNE      |L1.1408|
000546  e004              B        |L1.1362|
                  |L1.1352|
000548  a0dc              ADR      r0,|L1.2236|
00054a  9909              LDR      r1,[sp,#0x24]         ;159
                  |L1.1356|
00054c  f7fffffe          BL       __2printf
000550  e023              B        |L1.1434|
                  |L1.1362|
000552  a0dd              ADR      r0,|L1.2248|
000554  f7fffffe          BL       __2printf
000558  75e5              STRB     r5,[r4,#0x17]         ;164
00055a  e01e              B        |L1.1434|
                  |L1.1372|
00055c  a0d1              ADR      r0,|L1.2212|
00055e  f7fffffe          BL       __2printf
000562  aa08              ADD      r2,sp,#0x20           ;172
000564  4669              MOV      r1,sp                 ;172
000566  4638              MOV      r0,r7                 ;172
000568  f7fffffe          BL       usmart_get_aparm
00056c  f89d0020          LDRB     r0,[sp,#0x20]         ;173
000570  b930              CBNZ     r0,|L1.1408|
000572  a909              ADD      r1,sp,#0x24           ;175
000574  4668              MOV      r0,sp                 ;175
000576  f7fffffe          BL       usmart_str2num
00057a  f88d0020          STRB     r0,[sp,#0x20]         ;175
00057e  b108              CBZ      r0,|L1.1412|
                  |L1.1408|
000580  2002              MOVS     r0,#2                 ;186
000582  e5bf              B        |L1.260|
                  |L1.1412|
000584  9809              LDR      r0,[sp,#0x24]         ;181
000586  f01000ff          ANDS     r0,r0,#0xff           ;181
00058a  f88400ec          STRB     r0,[r4,#0xec]         ;181
00058e  d001              BEQ      |L1.1428|
000590  a0d2              ADR      r0,|L1.2268|
000592  e000              B        |L1.1430|
                  |L1.1428|
000594  a0d8              ADR      r0,|L1.2296|
                  |L1.1430|
000596  f7fffffe          BL       __2printf
                  |L1.1434|
00059a  a0c2              ADR      r0,|L1.2212|
00059c  e5af              B        |L1.254|
                  |L1.1438|
00059e  2001              MOVS     r0,#1                 ;190
0005a0  e5b0              B        |L1.260|
;;;194    ////////////////////////////////////////////////////////////////////////////////////////
                          ENDP

                  usmart_reset_runtime PROC
;;;203    //需要根据所移植到的MCU的定时器参数进行修改
;;;204    void usmart_reset_runtime(void)
0005a2  b510              PUSH     {r4,lr}
;;;205    {
;;;206     
;;;207    	TIM_ClearFlag(TIM4,TIM_FLAG_Update);//清除中断标志位 
0005a4  4cdb              LDR      r4,|L1.2324|
0005a6  2101              MOVS     r1,#1
0005a8  4620              MOV      r0,r4
0005aa  f7fffffe          BL       TIM_ClearFlag
;;;208    	TIM_SetAutoreload(TIM4,0XFFFF);//将重装载值设置到最大
0005ae  f64f71ff          MOV      r1,#0xffff
0005b2  4620              MOV      r0,r4
0005b4  f7fffffe          BL       TIM_SetAutoreload
;;;209    	TIM_SetCounter(TIM4,0);		//清空定时器的CNT
0005b8  2100              MOVS     r1,#0
0005ba  4620              MOV      r0,r4
0005bc  f7fffffe          BL       TIM_SetCounter
;;;210    	usmart_dev.runtime=0;	
0005c0  49d5              LDR      r1,|L1.2328|
0005c2  2000              MOVS     r0,#0
0005c4  f8c100f0          STR      r0,[r1,#0xf0]  ; usmart_dev
;;;211    }
0005c8  bd10              POP      {r4,pc}
;;;212    //获得runtime时间
                          ENDP

                  usmart_get_runtime PROC
;;;214    //需要根据所移植到的MCU的定时器参数进行修改
;;;215    u32 usmart_get_runtime(void)
0005ca  b570              PUSH     {r4-r6,lr}
;;;216    {
;;;217    	if(TIM_GetFlagStatus(TIM4,TIM_FLAG_Update)==SET)//在运行期间,产生了定时器溢出
0005cc  4dd1              LDR      r5,|L1.2324|
0005ce  2101              MOVS     r1,#1
0005d0  4628              MOV      r0,r5
0005d2  f7fffffe          BL       TIM_GetFlagStatus
;;;218    	{
;;;219    		usmart_dev.runtime+=0XFFFF;
0005d6  4cd0              LDR      r4,|L1.2328|
0005d8  2801              CMP      r0,#1                 ;217
0005da  d106              BNE      |L1.1514|
0005dc  f8d400f0          LDR      r0,[r4,#0xf0]  ; usmart_dev
0005e0  f64f71ff          MOV      r1,#0xffff
0005e4  4408              ADD      r0,r0,r1
0005e6  f8c400f0          STR      r0,[r4,#0xf0]  ; usmart_dev
                  |L1.1514|
;;;220    	}
;;;221    	usmart_dev.runtime+=TIM_GetCounter(TIM4);
0005ea  4628              MOV      r0,r5
0005ec  f7fffffe          BL       TIM_GetCounter
0005f0  f8541ff0          LDR      r1,[r4,#0xf0]!  ; usmart_dev
0005f4  4408              ADD      r0,r0,r1
0005f6  6020              STR      r0,[r4,#0]  ; usmart_dev
;;;222    	return usmart_dev.runtime;		//返回计数值
;;;223    }  
0005f8  bd70              POP      {r4-r6,pc}
;;;224    //下面这两个函数,非USMART函数,放到这里,仅仅方便移植. 
                          ENDP

                  TIM4_IRQHandler PROC
;;;225    //定时器4中断服务程序	 
;;;226    void TIM4_IRQHandler(void)
0005fa  b510              PUSH     {r4,lr}
;;;227    { 		    		  			    
;;;228    	if(TIM_GetITStatus(TIM4,TIM_IT_Update)==SET)//溢出中断
0005fc  4cc5              LDR      r4,|L1.2324|
0005fe  2101              MOVS     r1,#1
000600  4620              MOV      r0,r4
000602  f7fffffe          BL       TIM_GetITStatus
000606  2801              CMP      r0,#1
000608  d10a              BNE      |L1.1568|
;;;229    	{
;;;230    		usmart_dev.scan();	//执行usmart扫描	
00060a  48c3              LDR      r0,|L1.2328|
00060c  6901              LDR      r1,[r0,#0x10]  ; usmart_dev
00060e  4788              BLX      r1
;;;231    		TIM_SetCounter(TIM4,0);		//清空定时器的CNT
000610  2100              MOVS     r1,#0
000612  4620              MOV      r0,r4
000614  f7fffffe          BL       TIM_SetCounter
;;;232    		TIM_SetAutoreload(TIM4,100);//恢复原来的设置		    				   				     	    	
000618  2164              MOVS     r1,#0x64
00061a  4620              MOV      r0,r4
00061c  f7fffffe          BL       TIM_SetAutoreload
                  |L1.1568|
;;;233    	}				   
;;;234    	TIM_ClearITPendingBit(TIM4,TIM_IT_Update);  //清除中断标志位    
000620  4620              MOV      r0,r4
000622  e8bd4010          POP      {r4,lr}
000626  2101              MOVS     r1,#1
000628  f7ffbffe          B.W      TIM_ClearITPendingBit
;;;235    }
;;;236    //使能定时器4,使能中断.
                          ENDP

                  Timer4_Init PROC
;;;237    void Timer4_Init(u16 arr,u16 psc)
00062c  b57f              PUSH     {r0-r6,lr}
;;;238    {
00062e  460d              MOV      r5,r1
000630  4604              MOV      r4,r0
;;;239    	NVIC_InitTypeDef   NVIC_InitStructure;
;;;240    	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;241    
;;;242    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4,ENABLE);  ///使能TIM4时钟
000632  2101              MOVS     r1,#1
000634  2004              MOVS     r0,#4
000636  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;243    
;;;244    	TIM_TimeBaseInitStructure.TIM_Prescaler=psc;  //定时器分频
;;;245    	TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; //向上计数模式
00063a  2100              MOVS     r1,#0
;;;246    	TIM_TimeBaseInitStructure.TIM_Period=arr;   //自动重装载值
;;;247    	TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1; 
00063c  9401              STR      r4,[sp,#4]
00063e  f8ad5000          STRH     r5,[sp,#0]            ;244
;;;248    	
;;;249    	TIM_TimeBaseInit(TIM4,&TIM_TimeBaseInitStructure);//初始化定时器4
000642  4cb4              LDR      r4,|L1.2324|
000644  f8ad1002          STRH     r1,[sp,#2]            ;245
000648  f8ad1008          STRH     r1,[sp,#8]            ;247
00064c  4669              MOV      r1,sp
00064e  4620              MOV      r0,r4
000650  f7fffffe          BL       TIM_TimeBaseInit
;;;250    	
;;;251    	TIM_ITConfig(TIM4,TIM_IT_Update,ENABLE); //允许定时器4更新中断
000654  2201              MOVS     r2,#1
000656  4611              MOV      r1,r2
000658  4620              MOV      r0,r4
00065a  f7fffffe          BL       TIM_ITConfig
;;;252    	TIM_Cmd(TIM4,ENABLE); //使能定时器4
00065e  2101              MOVS     r1,#1
000660  4620              MOV      r0,r4
000662  f7fffffe          BL       TIM_Cmd
;;;253     
;;;254    	NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;//外部中断4
000666  201e              MOVS     r0,#0x1e
000668  f88d000c          STRB     r0,[sp,#0xc]
;;;255      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x03;//抢占优先级3
00066c  2003              MOVS     r0,#3
00066e  f88d000d          STRB     r0,[sp,#0xd]
;;;256      NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x03;//子优先级3
000672  f88d000e          STRB     r0,[sp,#0xe]
;;;257      NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;//使能外部中断通道
000676  2001              MOVS     r0,#1
000678  f88d000f          STRB     r0,[sp,#0xf]
;;;258      NVIC_Init(&NVIC_InitStructure);//配置NVIC
00067c  a803              ADD      r0,sp,#0xc
00067e  f7fffffe          BL       NVIC_Init
;;;259    	 							 
;;;260    }
000682  bd7f              POP      {r0-r6,pc}
;;;261    #endif
                          ENDP

                  usmart_init PROC
;;;264    //sysclk:系统时钟（Mhz）
;;;265    void usmart_init(u8 sysclk)
000684  eb0001c0          ADD      r1,r0,r0,LSL #3
;;;266    {
;;;267    #if USMART_ENTIMX_SCAN==1
;;;268    	Timer4_Init(1000,(u32)sysclk*100-1);//分频,时钟为10K ,100ms中断一次,注意,计数频率必须为10Khz,以和runtime单位(0.1ms)同步.
000688  eb011000          ADD      r0,r1,r0,LSL #4
00068c  f04f31ff          MOV      r1,#0xffffffff
000690  eb010080          ADD      r0,r1,r0,LSL #2
000694  b510              PUSH     {r4,lr}               ;266
000696  b281              UXTH     r1,r0
000698  f44f707a          MOV      r0,#0x3e8
00069c  f7fffffe          BL       Timer4_Init
;;;269    #endif
;;;270    	usmart_dev.sptype=1;	//十六进制显示参数
0006a0  499d              LDR      r1,|L1.2328|
0006a2  2001              MOVS     r0,#1
0006a4  75c8              STRB     r0,[r1,#0x17]
;;;271    }		
0006a6  bd10              POP      {r4,pc}
;;;272    //从str中获取函数名,id,及参数信息
                          ENDP

                  usmart_cmd_rec PROC
;;;274    //返回值:0,识别成功;其他,错误代码.
;;;275    u8 usmart_cmd_rec(u8*str) 
0006a8  b570              PUSH     {r4-r6,lr}
;;;276    {
0006aa  b094              SUB      sp,sp,#0x50
0006ac  4606              MOV      r6,r0
;;;277    	u8 sta,i,rval;//状态	 
;;;278    	u8 rpnum,spnum;
;;;279    	u8 rfname[MAX_FNAME_LEN];//暂存空间,用于存放接收到的函数名  
;;;280    	u8 sfname[MAX_FNAME_LEN];//存放本地函数名
;;;281    	sta=usmart_get_fname(str,rfname,&rpnum,&rval);//得到接收到的数据的函数名及参数个数	  
0006ae  ab13              ADD      r3,sp,#0x4c
0006b0  aa11              ADD      r2,sp,#0x44
0006b2  4669              MOV      r1,sp
0006b4  f7fffffe          BL       usmart_get_fname
;;;282    	if(sta)return sta;//错误
0006b8  2800              CMP      r0,#0
0006ba  d124              BNE      |L1.1798|
;;;283    	for(i=0;i<usmart_dev.fnum;i++)
0006bc  f88d0040          STRB     r0,[sp,#0x40]
;;;284    	{
;;;285    		sta=usmart_get_fname((u8*)usmart_dev.funs[i].name,sfname,&spnum,&rval);//得到本地函数名及参数个数
0006c0  4c95              LDR      r4,|L1.2328|
0006c2  2504              MOVS     r5,#4
0006c4  e014              B        |L1.1776|
                  |L1.1734|
0006c6  6820              LDR      r0,[r4,#0]  ; usmart_dev
0006c8  eb0501c1          ADD      r1,r5,r1,LSL #3
0006cc  ab13              ADD      r3,sp,#0x4c
0006ce  5840              LDR      r0,[r0,r1]
0006d0  aa12              ADD      r2,sp,#0x48
0006d2  a908              ADD      r1,sp,#0x20
0006d4  f7fffffe          BL       usmart_get_fname
;;;286    		if(sta)return sta;//本地解析有误	  
0006d8  2800              CMP      r0,#0
0006da  d114              BNE      |L1.1798|
;;;287    		if(usmart_strcmp(sfname,rfname)==0)//相等
0006dc  4669              MOV      r1,sp
0006de  a808              ADD      r0,sp,#0x20
0006e0  f7fffffe          BL       usmart_strcmp
0006e4  b188              CBZ      r0,|L1.1802|
0006e6  f89d0040          LDRB     r0,[sp,#0x40]         ;283
0006ea  1c40              ADDS     r0,r0,#1              ;283
0006ec  f88d0040          STRB     r0,[sp,#0x40]         ;283
                  |L1.1776|
0006f0  7d20              LDRB     r0,[r4,#0x14]         ;283  ; usmart_dev
0006f2  f89d1040          LDRB     r1,[sp,#0x40]         ;283
0006f6  4288              CMP      r0,r1                 ;283
0006f8  d8e5              BHI      |L1.1734|
                  |L1.1786|
;;;288    		{
;;;289    			if(spnum>rpnum)return USMART_PARMERR;//参数错误(输入参数比源函数参数少)
;;;290    			usmart_dev.id=i;//记录函数ID.
;;;291    			break;//跳出.
;;;292    		}	
;;;293    	}
;;;294    	if(i==usmart_dev.fnum)return USMART_NOFUNCFIND;	//未找到匹配的函数
0006fa  7d20              LDRB     r0,[r4,#0x14]  ; usmart_dev
0006fc  f89d1040          LDRB     r1,[sp,#0x40]
000700  4288              CMP      r0,r1
000702  d10e              BNE      |L1.1826|
000704  2004              MOVS     r0,#4
                  |L1.1798|
;;;295     	sta=usmart_get_fparam(str,&i);					//得到函数参数个数	
;;;296    	if(sta)return sta;								//返回错误
;;;297    	usmart_dev.pnum=i;								//参数个数记录
;;;298        return USMART_OK;
;;;299    }
000706  b014              ADD      sp,sp,#0x50
000708  bd70              POP      {r4-r6,pc}
                  |L1.1802|
00070a  f89d0048          LDRB     r0,[sp,#0x48]         ;289
00070e  f89d1044          LDRB     r1,[sp,#0x44]         ;289
000712  4288              CMP      r0,r1                 ;289
000714  d901              BLS      |L1.1818|
000716  2002              MOVS     r0,#2                 ;289
000718  e7f5              B        |L1.1798|
                  |L1.1818|
00071a  f89d0040          LDRB     r0,[sp,#0x40]         ;290
00071e  75a0              STRB     r0,[r4,#0x16]         ;290
000720  e7eb              B        |L1.1786|
                  |L1.1826|
000722  a910              ADD      r1,sp,#0x40           ;295
000724  4630              MOV      r0,r6                 ;295
000726  f7fffffe          BL       usmart_get_fparam
00072a  2800              CMP      r0,#0                 ;296
00072c  d1eb              BNE      |L1.1798|
00072e  f89d0040          LDRB     r0,[sp,#0x40]         ;297
000732  7560              STRB     r0,[r4,#0x15]         ;297
000734  2000              MOVS     r0,#0                 ;298
000736  e7e6              B        |L1.1798|
;;;300    //usamrt执行函数
                          ENDP

                  usmart_exe PROC
;;;304    //当所执行的函数没有返回值的时候,所打印的返回值是一个无意义的数据.
;;;305    void usmart_exe(void)
000738  e92d41f0          PUSH     {r4-r8,lr}
;;;306    {
;;;307    	u8 id,i;
;;;308    	u32 res;		   
;;;309    	u32 temp[MAX_PARM];//参数转换,使之支持了字符串 
;;;310    	u8 sfname[MAX_FNAME_LEN];//存放本地函数名
;;;311    	u8 pnum,rval;
;;;312    	id=usmart_dev.id;
00073c  4e76              LDR      r6,|L1.2328|
00073e  b09a              SUB      sp,sp,#0x68           ;306
000740  7db5              LDRB     r5,[r6,#0x16]  ; usmart_dev
;;;313    	if(id>=usmart_dev.fnum)return;//不执行.
000742  7d30              LDRB     r0,[r6,#0x14]  ; usmart_dev
000744  42a8              CMP      r0,r5
000746  d97c              BLS      |L1.2114|
;;;314    	usmart_get_fname((u8*)usmart_dev.funs[id].name,sfname,&pnum,&rval);//得到本地函数名,及参数个数 
000748  2104              MOVS     r1,#4
00074a  6830              LDR      r0,[r6,#0]  ; usmart_dev
00074c  eb0101c5          ADD      r1,r1,r5,LSL #3
000750  ab19              ADD      r3,sp,#0x64
000752  5840              LDR      r0,[r0,r1]
000754  aa18              ADD      r2,sp,#0x60
000756  a910              ADD      r1,sp,#0x40
000758  f7fffffe          BL       usmart_get_fname
;;;315    	printf("\r\n%s(",sfname);//输出正要执行的函数名
00075c  a910              ADD      r1,sp,#0x40
00075e  a06f              ADR      r0,|L1.2332|
000760  f7fffffe          BL       __2printf
;;;316    	for(i=0;i<pnum;i++)//输出参数
000764  2400              MOVS     r4,#0
000766  f10d0818          ADD      r8,sp,#0x18           ;309
00076a  e032              B        |L1.2002|
                  |L1.1900|
;;;317    	{
;;;318    		if(usmart_dev.parmtype&(1<<i))//参数是字符串
00076c  8b30              LDRH     r0,[r6,#0x18]  ; usmart_dev
00076e  2101              MOVS     r1,#1
000770  40a1              LSLS     r1,r1,r4
000772  4208              TST      r0,r1
000774  d017              BEQ      |L1.1958|
;;;319    		{
;;;320    			printf("%c",'"');			 
000776  2122              MOVS     r1,#0x22
000778  a06a              ADR      r0,|L1.2340|
00077a  f7fffffe          BL       __2printf
;;;321    			printf("%s",usmart_dev.parm+usmart_get_parmpos(i));
00077e  4620              MOV      r0,r4
000780  f7fffffe          BL       usmart_get_parmpos
000784  1981              ADDS     r1,r0,r6
000786  a068              ADR      r0,|L1.2344|
000788  3124              ADDS     r1,r1,#0x24
00078a  f7fffffe          BL       __2printf
;;;322    			printf("%c",'"');
00078e  2122              MOVS     r1,#0x22
000790  a064              ADR      r0,|L1.2340|
000792  f7fffffe          BL       __2printf
;;;323    			temp[i]=(u32)&(usmart_dev.parm[usmart_get_parmpos(i)]);
000796  4620              MOV      r0,r4
000798  f7fffffe          BL       usmart_get_parmpos
00079c  4430              ADD      r0,r0,r6
00079e  3024              ADDS     r0,r0,#0x24
0007a0  f8480024          STR      r0,[r8,r4,LSL #2]
0007a4  e00b              B        |L1.1982|
                  |L1.1958|
;;;324    		}else						  //参数是数字
;;;325    		{
;;;326    			temp[i]=*(u32*)(usmart_dev.parm+usmart_get_parmpos(i));
0007a6  4620              MOV      r0,r4
0007a8  f7fffffe          BL       usmart_get_parmpos
0007ac  4430              ADD      r0,r0,r6
0007ae  6a41              LDR      r1,[r0,#0x24]
0007b0  f8481024          STR      r1,[r8,r4,LSL #2]
;;;327    			if(usmart_dev.sptype==SP_TYPE_DEC)printf("%lu",temp[i]);//10进制参数显示
0007b4  7df0              LDRB     r0,[r6,#0x17]  ; usmart_dev
0007b6  b300              CBZ      r0,|L1.2042|
;;;328    			else printf("0X%X",temp[i]);//16进制参数显示 	   
0007b8  a05c              ADR      r0,|L1.2348|
                  |L1.1978|
0007ba  f7fffffe          BL       __2printf
                  |L1.1982|
;;;329    		}
;;;330    		if(i!=pnum-1)printf(",");
0007be  f89d0060          LDRB     r0,[sp,#0x60]
0007c2  1e40              SUBS     r0,r0,#1
0007c4  4284              CMP      r4,r0
0007c6  d002              BEQ      |L1.1998|
0007c8  a05a              ADR      r0,|L1.2356|
0007ca  f7fffffe          BL       __2printf
                  |L1.1998|
0007ce  1c64              ADDS     r4,r4,#1
0007d0  b2e4              UXTB     r4,r4                 ;316
                  |L1.2002|
0007d2  f89d0060          LDRB     r0,[sp,#0x60]         ;316
0007d6  4284              CMP      r4,r0                 ;316
0007d8  d3c8              BCC      |L1.1900|
;;;331    	}
;;;332    	printf(")");
0007da  a057              ADR      r0,|L1.2360|
0007dc  f7fffffe          BL       __2printf
;;;333    	usmart_reset_runtime();	//计时器清零,开始计时
0007e0  f7fffffe          BL       usmart_reset_runtime
;;;334    	switch(usmart_dev.pnum)
0007e4  7d70              LDRB     r0,[r6,#0x15]  ; usmart_dev
0007e6  280b              CMP      r0,#0xb
0007e8  d214              BCS      |L1.2068|
0007ea  e8dff000          TBB      [pc,r0]
0007ee  080d              DCB      0x08,0x0d
0007f0  b1b8c0c8          DCB      0xb1,0xb8,0xc0,0xc8
0007f4  d2deebfa          DCB      0xd2,0xde,0xeb,0xfa
0007f8  f800              DCB      0xf8,0x00
                  |L1.2042|
0007fa  a050              ADR      r0,|L1.2364|
0007fc  e7dd              B        |L1.1978|
;;;335    	{
;;;336    		case 0://无参数(void类型)											  
;;;337    			res=(*(u32(*)())usmart_dev.funs[id].func)();
0007fe  6830              LDR      r0,[r6,#0]  ; usmart_dev
000800  f8500035          LDR      r0,[r0,r5,LSL #3]
000804  4780              BLX      r0
;;;338    			break;
000806  e004              B        |L1.2066|
;;;339    	    case 1://有1个参数
;;;340    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0]);
000808  6830              LDR      r0,[r6,#0]  ; usmart_dev
00080a  f8501035          LDR      r1,[r0,r5,LSL #3]
00080e  9806              LDR      r0,[sp,#0x18]
000810  4788              BLX      r1
                  |L1.2066|
000812  4607              MOV      r7,r0                 ;337
                  |L1.2068|
;;;341    			break;
;;;342    	    case 2://有2个参数
;;;343    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1]);
;;;344    			break;
;;;345    	    case 3://有3个参数
;;;346    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2]);
;;;347    			break;
;;;348    	    case 4://有4个参数
;;;349    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3]);
;;;350    			break;
;;;351    	    case 5://有5个参数
;;;352    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4]);
;;;353    			break;
;;;354    	    case 6://有6个参数
;;;355    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;356    			temp[5]);
;;;357    			break;
;;;358    	    case 7://有7个参数
;;;359    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;360    			temp[5],temp[6]);
;;;361    			break;
;;;362    	    case 8://有8个参数
;;;363    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;364    			temp[5],temp[6],temp[7]);
;;;365    			break;
;;;366    	    case 9://有9个参数
;;;367    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;368    			temp[5],temp[6],temp[7],temp[8]);
;;;369    			break;
;;;370    	    case 10://有10个参数
;;;371    			res=(*(u32(*)())usmart_dev.funs[id].func)(temp[0],temp[1],temp[2],temp[3],temp[4],\
;;;372    			temp[5],temp[6],temp[7],temp[8],temp[9]);
;;;373    			break;
;;;374    	}
;;;375    	usmart_get_runtime();//获取函数执行时间
000814  f7fffffe          BL       usmart_get_runtime
;;;376    	if(rval==1)//需要返回值.
000818  f89d0064          LDRB     r0,[sp,#0x64]
00081c  2801              CMP      r0,#1
00081e  d011              BEQ      |L1.2116|
;;;377    	{
;;;378    		if(usmart_dev.sptype==SP_TYPE_DEC)printf("=%lu;\r\n",res);//输出执行结果(10进制参数显示)
;;;379    		else printf("=0X%X;\r\n",res);//输出执行结果(16进制参数显示)	   
;;;380    	}else printf(";\r\n");		//不需要返回值,直接输出结束
000820  a047              ADR      r0,|L1.2368|
000822  f7fffffe          BL       __2printf
                  |L1.2086|
;;;381    	if(usmart_dev.runtimeflag)	//需要显示函数执行时间
000826  f89600ec          LDRB     r0,[r6,#0xec]  ; usmart_dev
00082a  2800              CMP      r0,#0
00082c  d009              BEQ      |L1.2114|
;;;382    	{ 
;;;383    		printf("Function Run Time:%d.%1dms\r\n",usmart_dev.runtime/10,usmart_dev.runtime%10);//打印函数执行时间 
00082e  f8d600f0          LDR      r0,[r6,#0xf0]  ; usmart_dev
000832  210a              MOVS     r1,#0xa
000834  fbb0f2f1          UDIV     r2,r0,r1
000838  fb010212          MLS      r2,r1,r2,r0
00083c  fbb0f1f1          UDIV     r1,r0,r1
000840  e080              B        |L1.2372|
                  |L1.2114|
000842  e082              B        |L1.2378|
                  |L1.2116|
000844  e0ef              B        |L1.2598|
000846  0000              DCW      0x0000
                  |L1.2120|
000848  2d2d2d2d          DCB      "-------------------------",186,175,202,253," ID -------"
00084c  2d2d2d2d
000850  2d2d2d2d
000854  2d2d2d2d
000858  2d2d2d2d
00085c  2d2d2d2d
000860  2dbaafca
000864  fd204944
000868  202d2d2d
00086c  2d2d2d2d
000870  2d2d2d2d          DCB      "-------------------- \r\n",0
000874  2d2d2d2d
000878  2d2d2d2d
00087c  2d2d2d2d
000880  2d2d2d2d
000884  200d0a00
                  |L1.2184|
000888  25732069          DCB      "%s id is:\r\n0X%08X\r\n",0
00088c  64206973
000890  3a0d0a30
000894  58253038
000898  580d0a00
                  |L1.2204|
00089c  4845583a          DCB      "HEX:0X%X"
0008a0  30582558
                  |L1.2212|
0008a4  0d0a00            DCB      "\r\n",0
0008a7  00                DCB      0
                  |L1.2216|
0008a8  3136bdf8          DCB      "16",189,248,214,198,178,206,202,253,207,212,202,190,"!\r"
0008ac  d6c6b2ce
0008b0  cafdcfd4
0008b4  cabe210d
0008b8  0a00              DCB      "\n",0
0008ba  00                DCB      0
0008bb  00                DCB      0
                  |L1.2236|
0008bc  4445433a          DCB      "DEC:%lu\r\n",0
0008c0  256c750d
0008c4  0a00    
0008c6  00                DCB      0
0008c7  00                DCB      0
                  |L1.2248|
0008c8  3130bdf8          DCB      "10",189,248,214,198,178,206,202,253,207,212,202,190,"!\r"
0008cc  d6c6b2ce
0008d0  cafdcfd4
0008d4  cabe210d
0008d8  0a00              DCB      "\n",0
0008da  00                DCB      0
0008db  00                DCB      0
                  |L1.2268|
0008dc  52756e20          DCB      "Run Time Calculation ON\r\n",0
0008e0  54696d65
0008e4  2043616c
0008e8  63756c61
0008ec  74696f6e
0008f0  204f4e0d
0008f4  0a00    
0008f6  00                DCB      0
0008f7  00                DCB      0
                  |L1.2296|
0008f8  52756e20          DCB      "Run Time Calculation OFF\r\n",0
0008fc  54696d65
000900  2043616c
000904  63756c61
000908  74696f6e
00090c  204f4646
000910  0d0a00  
000913  00                DCB      0
                  |L1.2324|
                          DCD      0x40000800
                  |L1.2328|
                          DCD      usmart_dev
                  |L1.2332|
00091c  0d0a2573          DCB      "\r\n%s(",0
000920  2800    
000922  00                DCB      0
000923  00                DCB      0
                  |L1.2340|
000924  256300            DCB      "%c",0
000927  00                DCB      0
                  |L1.2344|
000928  257300            DCB      "%s",0
00092b  00                DCB      0
                  |L1.2348|
00092c  30582558          DCB      "0X%X",0
000930  00      
000931  00                DCB      0
000932  00                DCB      0
000933  00                DCB      0
                  |L1.2356|
000934  2c00              DCB      ",",0
000936  00                DCB      0
000937  00                DCB      0
                  |L1.2360|
000938  2900              DCB      ")",0
00093a  00                DCB      0
00093b  00                DCB      0
                  |L1.2364|
00093c  256c7500          DCB      "%lu",0
                  |L1.2368|
000940  3b0d0a00          DCB      ";\r\n",0
                  |L1.2372|
000944  a055              ADR      r0,|L1.2716|
000946  f7fffffe          BL       __2printf
                  |L1.2378|
;;;384    	}	
;;;385    }
00094a  b01a              ADD      sp,sp,#0x68
                  |L1.2380|
00094c  e8bd81f0          POP      {r4-r8,pc}
000950  6830              LDR      r0,[r6,#0]            ;343  ; usmart_dev
000952  f8502035          LDR      r2,[r0,r5,LSL #3]     ;343
000956  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;343
00095a  4790              BLX      r2                    ;343
00095c  e759              B        |L1.2066|
00095e  6830              LDR      r0,[r6,#0]            ;346  ; usmart_dev
000960  ac06              ADD      r4,sp,#0x18           ;346
000962  f8503035          LDR      r3,[r0,r5,LSL #3]     ;346
000966  e8940007          LDM      r4,{r0-r2}            ;346
00096a  4798              BLX      r3                    ;346
00096c  e751              B        |L1.2066|
00096e  6830              LDR      r0,[r6,#0]            ;349  ; usmart_dev
000970  af06              ADD      r7,sp,#0x18           ;349
000972  f8504035          LDR      r4,[r0,r5,LSL #3]     ;349
000976  e897000f          LDM      r7,{r0-r3}            ;349
00097a  47a0              BLX      r4                    ;349
00097c  e749              B        |L1.2066|
00097e  980a              LDR      r0,[sp,#0x28]         ;352
000980  9000              STR      r0,[sp,#0]            ;352
000982  6830              LDR      r0,[r6,#0]            ;352  ; usmart_dev
000984  af06              ADD      r7,sp,#0x18           ;352
000986  f8504035          LDR      r4,[r0,r5,LSL #3]     ;352
00098a  e897000f          LDM      r7,{r0-r3}            ;352
00098e  47a0              BLX      r4                    ;352
000990  e73f              B        |L1.2066|
000992  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;353
000996  e9cd0100          STRD     r0,r1,[sp,#0]         ;353
00099a  6830              LDR      r0,[r6,#0]            ;355  ; usmart_dev
00099c  af06              ADD      r7,sp,#0x18           ;355
00099e  f8504035          LDR      r4,[r0,r5,LSL #3]     ;355
0009a2  e897000f          LDM      r7,{r0-r3}            ;355
0009a6  47a0              BLX      r4                    ;355
0009a8  e733              B        |L1.2066|
0009aa  ab0a              ADD      r3,sp,#0x28           ;357
0009ac  af06              ADD      r7,sp,#0x18           ;359
0009ae  e8930007          LDM      r3,{r0-r2}            ;357
0009b2  e88d0007          STM      sp,{r0-r2}            ;357
0009b6  6830              LDR      r0,[r6,#0]            ;359  ; usmart_dev
0009b8  f8504035          LDR      r4,[r0,r5,LSL #3]     ;359
0009bc  e897000f          LDM      r7,{r0-r3}            ;359
0009c0  47a0              BLX      r4                    ;359
0009c2  e726              B        |L1.2066|
0009c4  ac0a              ADD      r4,sp,#0x28           ;361
0009c6  af06              ADD      r7,sp,#0x18           ;363
0009c8  e894000f          LDM      r4,{r0-r3}            ;361
0009cc  e88d000f          STM      sp,{r0-r3}            ;361
0009d0  6830              LDR      r0,[r6,#0]            ;363  ; usmart_dev
0009d2  f8504035          LDR      r4,[r0,r5,LSL #3]     ;363
0009d6  e897000f          LDM      r7,{r0-r3}            ;363
0009da  47a0              BLX      r4                    ;363
0009dc  e719              B        |L1.2066|
0009de  e010              B        |L1.2562|
0009e0  e7ff              B        |L1.2530|
                  |L1.2530|
0009e2  ac0b              ADD      r4,sp,#0x2c           ;365
0009e4  af06              ADD      r7,sp,#0x18           ;367
0009e6  e894000f          LDM      r4,{r0-r3}            ;365
0009ea  ac01              ADD      r4,sp,#4              ;365
0009ec  e884000f          STM      r4,{r0-r3}            ;365
0009f0  980a              LDR      r0,[sp,#0x28]         ;367
0009f2  9000              STR      r0,[sp,#0]            ;367
0009f4  6830              LDR      r0,[r6,#0]            ;367  ; usmart_dev
0009f6  f8504035          LDR      r4,[r0,r5,LSL #3]     ;367
0009fa  e897000f          LDM      r7,{r0-r3}            ;367
0009fe  47a0              BLX      r4                    ;367
000a00  e707              B        |L1.2066|
                  |L1.2562|
000a02  ac0c              ADD      r4,sp,#0x30           ;369
000a04  af06              ADD      r7,sp,#0x18           ;371
000a06  e894000f          LDM      r4,{r0-r3}            ;369
000a0a  ac02              ADD      r4,sp,#8              ;369
000a0c  e884000f          STM      r4,{r0-r3}            ;369
000a10  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;369
000a14  e9cd0100          STRD     r0,r1,[sp,#0]         ;369
000a18  6830              LDR      r0,[r6,#0]            ;371  ; usmart_dev
000a1a  f8504035          LDR      r4,[r0,r5,LSL #3]     ;371
000a1e  e897000f          LDM      r7,{r0-r3}            ;371
000a22  47a0              BLX      r4                    ;371
000a24  e6f5              B        |L1.2066|
                  |L1.2598|
000a26  7df0              LDRB     r0,[r6,#0x17]         ;378  ; usmart_dev
000a28  4639              MOV      r1,r7                 ;379
000a2a  b118              CBZ      r0,|L1.2612|
000a2c  a023              ADR      r0,|L1.2748|
                  |L1.2606|
000a2e  f7fffffe          BL       __2printf
000a32  e6f8              B        |L1.2086|
                  |L1.2612|
000a34  a024              ADR      r0,|L1.2760|
000a36  e7fa              B        |L1.2606|
;;;386    //usmart扫描函数
                          ENDP

                  usmart_scan PROC
;;;390    //如果非ALIENTEK用户,则USART_RX_STA和USART_RX_BUF[]需要用户自己实现
;;;391    void usmart_scan(void)
000a38  e92d41f0          PUSH     {r4-r8,lr}
;;;392    {
;;;393    	u8 sta,len;  
;;;394    	if(USART_RX_STA&0x8000)//串口接收完成？
000a3c  4e24              LDR      r6,|L1.2768|
000a3e  8830              LDRH     r0,[r6,#0]  ; USART_RX_STA
000a40  0401              LSLS     r1,r0,#16
000a42  d583              BPL      |L1.2380|
;;;395    	{					   
;;;396    		len=USART_RX_STA&0x3fff;	//得到此次接收到的数据长度
;;;397    		USART_RX_BUF[len]='\0';	//在末尾加入结束符. 
000a44  4923              LDR      r1,|L1.2772|
000a46  b2c0              UXTB     r0,r0                 ;396
;;;398    		sta=usmart_dev.cmd_rec(USART_RX_BUF);//得到函数各个信息
000a48  4f23              LDR      r7,|L1.2776|
000a4a  2500              MOVS     r5,#0                 ;397
000a4c  540d              STRB     r5,[r1,r0]            ;397
000a4e  68b9              LDR      r1,[r7,#8]  ; usmart_dev
000a50  4820              LDR      r0,|L1.2772|
000a52  4788              BLX      r1
000a54  0004              MOVS     r4,r0
;;;399    		if(sta==0)usmart_dev.exe();	//执行函数 
000a56  d00f              BEQ      |L1.2680|
;;;400    		else 
;;;401    		{  
;;;402    			len=usmart_sys_cmd_exe(USART_RX_BUF);
000a58  481e              LDR      r0,|L1.2772|
000a5a  f7fffffe          BL       usmart_sys_cmd_exe
;;;403    			if(len!=USMART_FUNCERR)sta=len;
000a5e  2801              CMP      r0,#1
000a60  d001              BEQ      |L1.2662|
000a62  0004              MOVS     r4,r0
000a64  d014              BEQ      |L1.2704|
                  |L1.2662|
;;;404    			if(sta)
;;;405    			{
;;;406    				switch(sta)
000a66  2c01              CMP      r4,#1
000a68  d009              BEQ      |L1.2686|
000a6a  2c02              CMP      r4,#2
000a6c  d009              BEQ      |L1.2690|
000a6e  2c03              CMP      r4,#3
000a70  d009              BEQ      |L1.2694|
000a72  2c04              CMP      r4,#4
000a74  d10c              BNE      |L1.2704|
000a76  e008              B        |L1.2698|
                  |L1.2680|
000a78  68f8              LDR      r0,[r7,#0xc]          ;399  ; usmart_dev
000a7a  4780              BLX      r0                    ;399
000a7c  e008              B        |L1.2704|
                  |L1.2686|
;;;407    				{
;;;408    					case USMART_FUNCERR:
;;;409    						printf("函数错误!\r\n");   			
000a7e  a017              ADR      r0,|L1.2780|
;;;410    						break;	
000a80  e004              B        |L1.2700|
                  |L1.2690|
;;;411    					case USMART_PARMERR:
;;;412    						printf("参数错误!\r\n");   			
000a82  a019              ADR      r0,|L1.2792|
;;;413    						break;				
000a84  e002              B        |L1.2700|
                  |L1.2694|
;;;414    					case USMART_PARMOVER:
;;;415    						printf("参数太多!\r\n");   			
000a86  a01b              ADR      r0,|L1.2804|
;;;416    						break;		
000a88  e000              B        |L1.2700|
                  |L1.2698|
;;;417    					case USMART_NOFUNCFIND:
;;;418    						printf("未找到匹配的函数!\r\n");   			
000a8a  a01d              ADR      r0,|L1.2816|
                  |L1.2700|
000a8c  f7fffffe          BL       __2printf
                  |L1.2704|
;;;419    						break;		
;;;420    				}
;;;421    			}
;;;422    		}
;;;423    		USART_RX_STA=0;//状态寄存器清空	    
000a90  8035              STRH     r5,[r6,#0]
;;;424    	}
;;;425    }
000a92  e75b              B        |L1.2380|
;;;426    
                          ENDP

                  read_addr PROC
;;;428    //读取指定地址的值		 
;;;429    u32 read_addr(u32 addr)
000a94  6800              LDR      r0,[r0,#0]
;;;430    {
;;;431    	return *(u32*)addr;//	
;;;432    }
000a96  4770              BX       lr
;;;433    //在指定地址写入指定的值		 
                          ENDP

                  write_addr PROC
;;;434    void write_addr(u32 addr,u32 val)
000a98  6001              STR      r1,[r0,#0]
;;;435    {
;;;436    	*(u32*)addr=val; 	
;;;437    }
000a9a  4770              BX       lr
;;;438    #endif
                          ENDP

                  |L1.2716|
000a9c  46756e63          DCB      "Function Run Time:%d.%1dms\r\n",0
000aa0  74696f6e
000aa4  2052756e
000aa8  2054696d
000aac  653a2564
000ab0  2e253164
000ab4  6d730d0a
000ab8  00      
000ab9  00                DCB      0
000aba  00                DCB      0
000abb  00                DCB      0
                  |L1.2748|
000abc  3d305825          DCB      "=0X%X;\r\n",0
000ac0  583b0d0a
000ac4  00      
000ac5  00                DCB      0
000ac6  00                DCB      0
000ac7  00                DCB      0
                  |L1.2760|
000ac8  3d256c75          DCB      "=%lu;\r\n",0
000acc  3b0d0a00
                  |L1.2768|
                          DCD      USART_RX_STA
                  |L1.2772|
                          DCD      USART_RX_BUF
                  |L1.2776|
                          DCD      usmart_dev
                  |L1.2780|
000adc  baafcafd          DCB      186,175,202,253,180,237,206,243,"!\r\n",0
000ae0  b4edcef3
000ae4  210d0a00
                  |L1.2792|
000ae8  b2cecafd          DCB      178,206,202,253,180,237,206,243,"!\r\n",0
000aec  b4edcef3
000af0  210d0a00
                  |L1.2804|
000af4  b2cecafd          DCB      178,206,202,253,204,171,182,224,"!\r\n",0
000af8  ccabb6e0
000afc  210d0a00
                  |L1.2816|
000b00  ceb4d5d2          DCB      206,180,213,210,181,189,198,165,197,228,181,196,186,175,202
000b04  b5bdc6a5
000b08  c5e4b5c4
000b0c  baafca  
000b0f  fd210d0a          DCB      253,"!\r\n",0
000b13  00      

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  3f00              DCB      "?",0
000002  00                DCB      0
000003  00                DCB      0
000004  68656c70          DCB      "help",0
000008  00      
000009  00                DCB      0
00000a  00                DCB      0
00000b  00                DCB      0
00000c  6c697374          DCB      "list",0
000010  00      
000011  00                DCB      0
000012  00                DCB      0
000013  00                DCB      0
000014  696400            DCB      "id",0
000017  00                DCB      0
000018  68657800          DCB      "hex",0
00001c  64656300          DCB      "dec",0
000020  72756e74          DCB      "runtime",0
000024  696d6500

                          AREA ||.data||, DATA, ALIGN=2

                  sys_cmd_tab
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x4
                          DCD      ||.conststring||+0xc
                          DCD      ||.conststring||+0x14
                          DCD      ||.conststring||+0x18
                          DCD      ||.conststring||+0x1c
                          DCD      ||.conststring||+0x20

;*** Start embedded assembler ***

#line 1 "..\\USMART\\usmart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_usmart_c_3e792bad____REV16|
#line 129 "..\\CORE\\core_cmInstr.h"
|__asm___8_usmart_c_3e792bad____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_usmart_c_3e792bad____REVSH|
#line 144
|__asm___8_usmart_c_3e792bad____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
